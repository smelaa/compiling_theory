Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program_ins program
Rule 2     program -> program_ins
Rule 3     program_ins -> PRINT value ;
Rule 4     program_ins -> assign ;
Rule 5     program_ins -> cond_instruction
Rule 6     program_ins -> while_instruction
Rule 7     program_ins -> for_instruction
Rule 8     program_ins -> { program }
Rule 9     program_ins -> BREAK ;
Rule 10    program_ins -> CONTINUE ;
Rule 11    program_ins -> RETURN operation ;
Rule 12    program_ins -> COMMENT
Rule 13    value -> all_operations , value
Rule 14    value -> all_operations
Rule 15    assign -> id_assign
Rule 16    assign -> matrix_assign
Rule 17    id_assign -> id = all_operations
Rule 18    id_assign -> id assign_operator operation
Rule 19    all_operations -> operation
Rule 20    all_operations -> string
Rule 21    string -> STRING
Rule 22    assign_operator -> ADDASSIGN
Rule 23    assign_operator -> SUBASSIGN
Rule 24    assign_operator -> MULASSIGN
Rule 25    assign_operator -> DIVASSIGN
Rule 26    operation -> numeric_operation
Rule 27    operation -> matrix_operation
Rule 28    matrix_assign -> id [ multiple_index ] = numeric_operation
Rule 29    matrix_assign -> id [ multiple_index ] assign_operator numeric_operation
Rule 30    matrix_assign -> id [ single_index ] = vector
Rule 31    multiple_index -> INTNUM , INTNUM
Rule 32    single_index -> INTNUM
Rule 33    vector -> [ vector_val ]
Rule 34    vector_val -> numeric_operation , vector_val
Rule 35    vector_val -> numeric_operation
Rule 36    numeric_operation -> numeric_operation + numeric_operation
Rule 37    numeric_operation -> numeric_operation - numeric_operation
Rule 38    numeric_operation -> numeric_operation * numeric_operation
Rule 39    numeric_operation -> numeric_operation / numeric_operation
Rule 40    numeric_operation -> - numeric_operation
Rule 41    numeric_operation -> ( numeric_operation )
Rule 42    numeric_operation -> id
Rule 43    numeric_operation -> INTNUM
Rule 44    numeric_operation -> FLOATNUM
Rule 45    matrix_operation -> matrix_operation matrix_operator_mul matrix_operation
Rule 46    matrix_operation -> matrix_operation matrix_operator_add matrix_operation
Rule 47    matrix_operation -> matrix_operation '
Rule 48    matrix_operation -> ( matrix_operation )
Rule 49    matrix_operation -> id_form
Rule 50    matrix_operation -> fid ( numeric_operation )
Rule 51    matrix_operation -> [ matrix ]
Rule 52    id_form -> id '
Rule 53    id_form -> id matrix_operator_mul matrix_operation
Rule 54    id_form -> matrix_operation matrix_operator_mul id
Rule 55    id_form -> id matrix_operator_mul id
Rule 56    id_form -> id matrix_operator_add matrix_operation
Rule 57    id_form -> matrix_operation matrix_operator_add id
Rule 58    id_form -> id matrix_operator_add id
Rule 59    matrix_operator_mul -> DOTMUL
Rule 60    matrix_operator_mul -> DOTDIV
Rule 61    matrix_operator_add -> DOTADD
Rule 62    matrix_operator_add -> DOTSUB
Rule 63    id -> ID
Rule 64    fid -> ZEROS
Rule 65    fid -> ONES
Rule 66    fid -> EYE
Rule 67    matrix -> vector , matrix
Rule 68    matrix -> vector
Rule 69    cond_instruction -> IF ( condition ) program_ins
Rule 70    cond_instruction -> IF ( condition ) program_ins ELSE program_ins
Rule 71    condition -> operation comparison_operator operation
Rule 72    comparison_operator -> EQ
Rule 73    comparison_operator -> NEQ
Rule 74    comparison_operator -> LT
Rule 75    comparison_operator -> GT
Rule 76    comparison_operator -> <
Rule 77    comparison_operator -> >
Rule 78    while_instruction -> WHILE ( condition ) program_ins
Rule 79    for_instruction -> FOR id = range program_ins
Rule 80    range -> numeric_operation : numeric_operation

Terminals, with rules where they appear

'                    : 47 52
(                    : 41 48 50 69 70 78
)                    : 41 48 50 69 70 78
*                    : 38
+                    : 36
,                    : 13 31 34 67
-                    : 37 40
/                    : 39
:                    : 80
;                    : 3 4 9 10 11
<                    : 76
=                    : 17 28 30 79
>                    : 77
ADDASSIGN            : 22
BREAK                : 9
COMMENT              : 12
CONTINUE             : 10
DIVASSIGN            : 25
DOTADD               : 61
DOTDIV               : 60
DOTMUL               : 59
DOTSUB               : 62
ELSE                 : 70
EQ                   : 72
EYE                  : 66
FLOATNUM             : 44
FOR                  : 79
GT                   : 75
ID                   : 63
IF                   : 69 70
INTNUM               : 31 31 32 43
LT                   : 74
MULASSIGN            : 24
NEQ                  : 73
ONES                 : 65
PRINT                : 3
RETURN               : 11
STRING               : 21
SUBASSIGN            : 23
WHILE                : 78
ZEROS                : 64
[                    : 28 29 30 33 51
]                    : 28 29 30 33 51
error                : 
{                    : 8
}                    : 8

Nonterminals, with rules where they appear

all_operations       : 13 14 17
assign               : 4
assign_operator      : 18 29
comparison_operator  : 71
cond_instruction     : 5
condition            : 69 70 78
fid                  : 50
for_instruction      : 7
id                   : 17 18 28 29 30 42 52 53 54 55 55 56 57 58 58 79
id_assign            : 15
id_form              : 49
matrix               : 51 67
matrix_assign        : 16
matrix_operation     : 27 45 45 46 46 47 48 53 54 56 57
matrix_operator_add  : 46 56 57 58
matrix_operator_mul  : 45 53 54 55
multiple_index       : 28 29
numeric_operation    : 26 28 29 34 35 36 36 37 37 38 38 39 39 40 41 50 80 80
operation            : 11 18 19 71 71
program              : 1 8 0
program_ins          : 1 2 69 70 70 78 79
range                : 79
single_index         : 30
string               : 20
value                : 3 13
vector               : 30 67 68
vector_val           : 33 34
while_instruction    : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_ins program
    (2) program -> . program_ins
    (3) program_ins -> . PRINT value ;
    (4) program_ins -> . assign ;
    (5) program_ins -> . cond_instruction
    (6) program_ins -> . while_instruction
    (7) program_ins -> . for_instruction
    (8) program_ins -> . { program }
    (9) program_ins -> . BREAK ;
    (10) program_ins -> . CONTINUE ;
    (11) program_ins -> . RETURN operation ;
    (12) program_ins -> . COMMENT
    (15) assign -> . id_assign
    (16) assign -> . matrix_assign
    (69) cond_instruction -> . IF ( condition ) program_ins
    (70) cond_instruction -> . IF ( condition ) program_ins ELSE program_ins
    (78) while_instruction -> . WHILE ( condition ) program_ins
    (79) for_instruction -> . FOR id = range program_ins
    (17) id_assign -> . id = all_operations
    (18) id_assign -> . id assign_operator operation
    (28) matrix_assign -> . id [ multiple_index ] = numeric_operation
    (29) matrix_assign -> . id [ multiple_index ] assign_operator numeric_operation
    (30) matrix_assign -> . id [ single_index ] = vector
    (63) id -> . ID

    PRINT           shift and go to state 3
    {               shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    COMMENT         shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    ID              shift and go to state 19

    program                        shift and go to state 1
    program_ins                    shift and go to state 2
    assign                         shift and go to state 4
    cond_instruction               shift and go to state 5
    while_instruction              shift and go to state 6
    for_instruction                shift and go to state 7
    id_assign                      shift and go to state 13
    matrix_assign                  shift and go to state 14
    id                             shift and go to state 18

state 1

    (0) S' -> program .



state 2

    (1) program -> program_ins . program
    (2) program -> program_ins .
    (1) program -> . program_ins program
    (2) program -> . program_ins
    (3) program_ins -> . PRINT value ;
    (4) program_ins -> . assign ;
    (5) program_ins -> . cond_instruction
    (6) program_ins -> . while_instruction
    (7) program_ins -> . for_instruction
    (8) program_ins -> . { program }
    (9) program_ins -> . BREAK ;
    (10) program_ins -> . CONTINUE ;
    (11) program_ins -> . RETURN operation ;
    (12) program_ins -> . COMMENT
    (15) assign -> . id_assign
    (16) assign -> . matrix_assign
    (69) cond_instruction -> . IF ( condition ) program_ins
    (70) cond_instruction -> . IF ( condition ) program_ins ELSE program_ins
    (78) while_instruction -> . WHILE ( condition ) program_ins
    (79) for_instruction -> . FOR id = range program_ins
    (17) id_assign -> . id = all_operations
    (18) id_assign -> . id assign_operator operation
    (28) matrix_assign -> . id [ multiple_index ] = numeric_operation
    (29) matrix_assign -> . id [ multiple_index ] assign_operator numeric_operation
    (30) matrix_assign -> . id [ single_index ] = vector
    (63) id -> . ID

    $end            reduce using rule 2 (program -> program_ins .)
    }               reduce using rule 2 (program -> program_ins .)
    PRINT           shift and go to state 3
    {               shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    COMMENT         shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    ID              shift and go to state 19

    program_ins                    shift and go to state 2
    program                        shift and go to state 20
    assign                         shift and go to state 4
    cond_instruction               shift and go to state 5
    while_instruction              shift and go to state 6
    for_instruction                shift and go to state 7
    id_assign                      shift and go to state 13
    matrix_assign                  shift and go to state 14
    id                             shift and go to state 18

state 3

    (3) program_ins -> PRINT . value ;
    (13) value -> . all_operations , value
    (14) value -> . all_operations
    (19) all_operations -> . operation
    (20) all_operations -> . string
    (26) operation -> . numeric_operation
    (27) operation -> . matrix_operation
    (21) string -> . STRING
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    STRING          shift and go to state 27
    -               shift and go to state 28
    (               shift and go to state 29
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    value                          shift and go to state 21
    all_operations                 shift and go to state 22
    operation                      shift and go to state 23
    string                         shift and go to state 24
    numeric_operation              shift and go to state 25
    matrix_operation               shift and go to state 26
    id                             shift and go to state 30
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 4

    (4) program_ins -> assign . ;

    ;               shift and go to state 39


state 5

    (5) program_ins -> cond_instruction .

    PRINT           reduce using rule 5 (program_ins -> cond_instruction .)
    {               reduce using rule 5 (program_ins -> cond_instruction .)
    BREAK           reduce using rule 5 (program_ins -> cond_instruction .)
    CONTINUE        reduce using rule 5 (program_ins -> cond_instruction .)
    RETURN          reduce using rule 5 (program_ins -> cond_instruction .)
    COMMENT         reduce using rule 5 (program_ins -> cond_instruction .)
    IF              reduce using rule 5 (program_ins -> cond_instruction .)
    WHILE           reduce using rule 5 (program_ins -> cond_instruction .)
    FOR             reduce using rule 5 (program_ins -> cond_instruction .)
    ID              reduce using rule 5 (program_ins -> cond_instruction .)
    $end            reduce using rule 5 (program_ins -> cond_instruction .)
    }               reduce using rule 5 (program_ins -> cond_instruction .)
    ELSE            reduce using rule 5 (program_ins -> cond_instruction .)


state 6

    (6) program_ins -> while_instruction .

    PRINT           reduce using rule 6 (program_ins -> while_instruction .)
    {               reduce using rule 6 (program_ins -> while_instruction .)
    BREAK           reduce using rule 6 (program_ins -> while_instruction .)
    CONTINUE        reduce using rule 6 (program_ins -> while_instruction .)
    RETURN          reduce using rule 6 (program_ins -> while_instruction .)
    COMMENT         reduce using rule 6 (program_ins -> while_instruction .)
    IF              reduce using rule 6 (program_ins -> while_instruction .)
    WHILE           reduce using rule 6 (program_ins -> while_instruction .)
    FOR             reduce using rule 6 (program_ins -> while_instruction .)
    ID              reduce using rule 6 (program_ins -> while_instruction .)
    $end            reduce using rule 6 (program_ins -> while_instruction .)
    }               reduce using rule 6 (program_ins -> while_instruction .)
    ELSE            reduce using rule 6 (program_ins -> while_instruction .)


state 7

    (7) program_ins -> for_instruction .

    PRINT           reduce using rule 7 (program_ins -> for_instruction .)
    {               reduce using rule 7 (program_ins -> for_instruction .)
    BREAK           reduce using rule 7 (program_ins -> for_instruction .)
    CONTINUE        reduce using rule 7 (program_ins -> for_instruction .)
    RETURN          reduce using rule 7 (program_ins -> for_instruction .)
    COMMENT         reduce using rule 7 (program_ins -> for_instruction .)
    IF              reduce using rule 7 (program_ins -> for_instruction .)
    WHILE           reduce using rule 7 (program_ins -> for_instruction .)
    FOR             reduce using rule 7 (program_ins -> for_instruction .)
    ID              reduce using rule 7 (program_ins -> for_instruction .)
    $end            reduce using rule 7 (program_ins -> for_instruction .)
    }               reduce using rule 7 (program_ins -> for_instruction .)
    ELSE            reduce using rule 7 (program_ins -> for_instruction .)


state 8

    (8) program_ins -> { . program }
    (1) program -> . program_ins program
    (2) program -> . program_ins
    (3) program_ins -> . PRINT value ;
    (4) program_ins -> . assign ;
    (5) program_ins -> . cond_instruction
    (6) program_ins -> . while_instruction
    (7) program_ins -> . for_instruction
    (8) program_ins -> . { program }
    (9) program_ins -> . BREAK ;
    (10) program_ins -> . CONTINUE ;
    (11) program_ins -> . RETURN operation ;
    (12) program_ins -> . COMMENT
    (15) assign -> . id_assign
    (16) assign -> . matrix_assign
    (69) cond_instruction -> . IF ( condition ) program_ins
    (70) cond_instruction -> . IF ( condition ) program_ins ELSE program_ins
    (78) while_instruction -> . WHILE ( condition ) program_ins
    (79) for_instruction -> . FOR id = range program_ins
    (17) id_assign -> . id = all_operations
    (18) id_assign -> . id assign_operator operation
    (28) matrix_assign -> . id [ multiple_index ] = numeric_operation
    (29) matrix_assign -> . id [ multiple_index ] assign_operator numeric_operation
    (30) matrix_assign -> . id [ single_index ] = vector
    (63) id -> . ID

    PRINT           shift and go to state 3
    {               shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    COMMENT         shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    ID              shift and go to state 19

    program                        shift and go to state 40
    program_ins                    shift and go to state 2
    assign                         shift and go to state 4
    cond_instruction               shift and go to state 5
    while_instruction              shift and go to state 6
    for_instruction                shift and go to state 7
    id_assign                      shift and go to state 13
    matrix_assign                  shift and go to state 14
    id                             shift and go to state 18

state 9

    (9) program_ins -> BREAK . ;

    ;               shift and go to state 41


state 10

    (10) program_ins -> CONTINUE . ;

    ;               shift and go to state 42


state 11

    (11) program_ins -> RETURN . operation ;
    (26) operation -> . numeric_operation
    (27) operation -> . matrix_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    -               shift and go to state 28
    (               shift and go to state 29
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    operation                      shift and go to state 43
    numeric_operation              shift and go to state 25
    matrix_operation               shift and go to state 26
    id                             shift and go to state 30
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 12

    (12) program_ins -> COMMENT .

    PRINT           reduce using rule 12 (program_ins -> COMMENT .)
    {               reduce using rule 12 (program_ins -> COMMENT .)
    BREAK           reduce using rule 12 (program_ins -> COMMENT .)
    CONTINUE        reduce using rule 12 (program_ins -> COMMENT .)
    RETURN          reduce using rule 12 (program_ins -> COMMENT .)
    COMMENT         reduce using rule 12 (program_ins -> COMMENT .)
    IF              reduce using rule 12 (program_ins -> COMMENT .)
    WHILE           reduce using rule 12 (program_ins -> COMMENT .)
    FOR             reduce using rule 12 (program_ins -> COMMENT .)
    ID              reduce using rule 12 (program_ins -> COMMENT .)
    $end            reduce using rule 12 (program_ins -> COMMENT .)
    }               reduce using rule 12 (program_ins -> COMMENT .)
    ELSE            reduce using rule 12 (program_ins -> COMMENT .)


state 13

    (15) assign -> id_assign .

    ;               reduce using rule 15 (assign -> id_assign .)


state 14

    (16) assign -> matrix_assign .

    ;               reduce using rule 16 (assign -> matrix_assign .)


state 15

    (69) cond_instruction -> IF . ( condition ) program_ins
    (70) cond_instruction -> IF . ( condition ) program_ins ELSE program_ins

    (               shift and go to state 44


state 16

    (78) while_instruction -> WHILE . ( condition ) program_ins

    (               shift and go to state 45


state 17

    (79) for_instruction -> FOR . id = range program_ins
    (63) id -> . ID

    ID              shift and go to state 19

    id                             shift and go to state 46

state 18

    (17) id_assign -> id . = all_operations
    (18) id_assign -> id . assign_operator operation
    (28) matrix_assign -> id . [ multiple_index ] = numeric_operation
    (29) matrix_assign -> id . [ multiple_index ] assign_operator numeric_operation
    (30) matrix_assign -> id . [ single_index ] = vector
    (22) assign_operator -> . ADDASSIGN
    (23) assign_operator -> . SUBASSIGN
    (24) assign_operator -> . MULASSIGN
    (25) assign_operator -> . DIVASSIGN

    =               shift and go to state 47
    [               shift and go to state 49
    ADDASSIGN       shift and go to state 50
    SUBASSIGN       shift and go to state 51
    MULASSIGN       shift and go to state 52
    DIVASSIGN       shift and go to state 53

    assign_operator                shift and go to state 48

state 19

    (63) id -> ID .

    =               reduce using rule 63 (id -> ID .)
    [               reduce using rule 63 (id -> ID .)
    ADDASSIGN       reduce using rule 63 (id -> ID .)
    SUBASSIGN       reduce using rule 63 (id -> ID .)
    MULASSIGN       reduce using rule 63 (id -> ID .)
    DIVASSIGN       reduce using rule 63 (id -> ID .)
    '               reduce using rule 63 (id -> ID .)
    DOTMUL          reduce using rule 63 (id -> ID .)
    DOTDIV          reduce using rule 63 (id -> ID .)
    DOTADD          reduce using rule 63 (id -> ID .)
    DOTSUB          reduce using rule 63 (id -> ID .)
    +               reduce using rule 63 (id -> ID .)
    -               reduce using rule 63 (id -> ID .)
    *               reduce using rule 63 (id -> ID .)
    /               reduce using rule 63 (id -> ID .)
    ,               reduce using rule 63 (id -> ID .)
    ;               reduce using rule 63 (id -> ID .)
    )               reduce using rule 63 (id -> ID .)
    EQ              reduce using rule 63 (id -> ID .)
    NEQ             reduce using rule 63 (id -> ID .)
    LT              reduce using rule 63 (id -> ID .)
    GT              reduce using rule 63 (id -> ID .)
    <               reduce using rule 63 (id -> ID .)
    >               reduce using rule 63 (id -> ID .)
    ]               reduce using rule 63 (id -> ID .)
    :               reduce using rule 63 (id -> ID .)
    PRINT           reduce using rule 63 (id -> ID .)
    {               reduce using rule 63 (id -> ID .)
    BREAK           reduce using rule 63 (id -> ID .)
    CONTINUE        reduce using rule 63 (id -> ID .)
    RETURN          reduce using rule 63 (id -> ID .)
    COMMENT         reduce using rule 63 (id -> ID .)
    IF              reduce using rule 63 (id -> ID .)
    WHILE           reduce using rule 63 (id -> ID .)
    FOR             reduce using rule 63 (id -> ID .)
    ID              reduce using rule 63 (id -> ID .)


state 20

    (1) program -> program_ins program .

    $end            reduce using rule 1 (program -> program_ins program .)
    }               reduce using rule 1 (program -> program_ins program .)


state 21

    (3) program_ins -> PRINT value . ;

    ;               shift and go to state 54


state 22

    (13) value -> all_operations . , value
    (14) value -> all_operations .

    ,               shift and go to state 55
    ;               reduce using rule 14 (value -> all_operations .)


state 23

    (19) all_operations -> operation .

    ,               reduce using rule 19 (all_operations -> operation .)
    ;               reduce using rule 19 (all_operations -> operation .)


state 24

    (20) all_operations -> string .

    ,               reduce using rule 20 (all_operations -> string .)
    ;               reduce using rule 20 (all_operations -> string .)


state 25

    (26) operation -> numeric_operation .
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    ,               reduce using rule 26 (operation -> numeric_operation .)
    ;               reduce using rule 26 (operation -> numeric_operation .)
    EQ              reduce using rule 26 (operation -> numeric_operation .)
    NEQ             reduce using rule 26 (operation -> numeric_operation .)
    LT              reduce using rule 26 (operation -> numeric_operation .)
    GT              reduce using rule 26 (operation -> numeric_operation .)
    <               reduce using rule 26 (operation -> numeric_operation .)
    >               reduce using rule 26 (operation -> numeric_operation .)
    )               reduce using rule 26 (operation -> numeric_operation .)
    +               shift and go to state 56
    -               shift and go to state 57
    *               shift and go to state 58
    /               shift and go to state 59


state 26

    (27) operation -> matrix_operation .
    (45) matrix_operation -> matrix_operation . matrix_operator_mul matrix_operation
    (46) matrix_operation -> matrix_operation . matrix_operator_add matrix_operation
    (47) matrix_operation -> matrix_operation . '
    (54) id_form -> matrix_operation . matrix_operator_mul id
    (57) id_form -> matrix_operation . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    ,               reduce using rule 27 (operation -> matrix_operation .)
    ;               reduce using rule 27 (operation -> matrix_operation .)
    EQ              reduce using rule 27 (operation -> matrix_operation .)
    NEQ             reduce using rule 27 (operation -> matrix_operation .)
    LT              reduce using rule 27 (operation -> matrix_operation .)
    GT              reduce using rule 27 (operation -> matrix_operation .)
    <               reduce using rule 27 (operation -> matrix_operation .)
    >               reduce using rule 27 (operation -> matrix_operation .)
    )               reduce using rule 27 (operation -> matrix_operation .)
    '               shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    DOTADD          shift and go to state 65
    DOTSUB          shift and go to state 66

    matrix_operator_mul            shift and go to state 60
    matrix_operator_add            shift and go to state 61

state 27

    (21) string -> STRING .

    ,               reduce using rule 21 (string -> STRING .)
    ;               reduce using rule 21 (string -> STRING .)


state 28

    (40) numeric_operation -> - . numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    numeric_operation              shift and go to state 67
    id                             shift and go to state 69

state 29

    (41) numeric_operation -> ( . numeric_operation )
    (48) matrix_operation -> ( . matrix_operation )
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    -               shift and go to state 28
    (               shift and go to state 29
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    numeric_operation              shift and go to state 70
    matrix_operation               shift and go to state 71
    id                             shift and go to state 30
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 30

    (42) numeric_operation -> id .
    (52) id_form -> id . '
    (53) id_form -> id . matrix_operator_mul matrix_operation
    (55) id_form -> id . matrix_operator_mul id
    (56) id_form -> id . matrix_operator_add matrix_operation
    (58) id_form -> id . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    +               reduce using rule 42 (numeric_operation -> id .)
    -               reduce using rule 42 (numeric_operation -> id .)
    *               reduce using rule 42 (numeric_operation -> id .)
    /               reduce using rule 42 (numeric_operation -> id .)
    ,               reduce using rule 42 (numeric_operation -> id .)
    ;               reduce using rule 42 (numeric_operation -> id .)
    )               reduce using rule 42 (numeric_operation -> id .)
    EQ              reduce using rule 42 (numeric_operation -> id .)
    NEQ             reduce using rule 42 (numeric_operation -> id .)
    LT              reduce using rule 42 (numeric_operation -> id .)
    GT              reduce using rule 42 (numeric_operation -> id .)
    <               reduce using rule 42 (numeric_operation -> id .)
    >               reduce using rule 42 (numeric_operation -> id .)
    '               shift and go to state 72
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    DOTADD          shift and go to state 65
    DOTSUB          shift and go to state 66

    matrix_operator_mul            shift and go to state 73
    matrix_operator_add            shift and go to state 74

state 31

    (43) numeric_operation -> INTNUM .

    +               reduce using rule 43 (numeric_operation -> INTNUM .)
    -               reduce using rule 43 (numeric_operation -> INTNUM .)
    *               reduce using rule 43 (numeric_operation -> INTNUM .)
    /               reduce using rule 43 (numeric_operation -> INTNUM .)
    ,               reduce using rule 43 (numeric_operation -> INTNUM .)
    ;               reduce using rule 43 (numeric_operation -> INTNUM .)
    )               reduce using rule 43 (numeric_operation -> INTNUM .)
    EQ              reduce using rule 43 (numeric_operation -> INTNUM .)
    NEQ             reduce using rule 43 (numeric_operation -> INTNUM .)
    LT              reduce using rule 43 (numeric_operation -> INTNUM .)
    GT              reduce using rule 43 (numeric_operation -> INTNUM .)
    <               reduce using rule 43 (numeric_operation -> INTNUM .)
    >               reduce using rule 43 (numeric_operation -> INTNUM .)
    ]               reduce using rule 43 (numeric_operation -> INTNUM .)
    :               reduce using rule 43 (numeric_operation -> INTNUM .)
    PRINT           reduce using rule 43 (numeric_operation -> INTNUM .)
    {               reduce using rule 43 (numeric_operation -> INTNUM .)
    BREAK           reduce using rule 43 (numeric_operation -> INTNUM .)
    CONTINUE        reduce using rule 43 (numeric_operation -> INTNUM .)
    RETURN          reduce using rule 43 (numeric_operation -> INTNUM .)
    COMMENT         reduce using rule 43 (numeric_operation -> INTNUM .)
    IF              reduce using rule 43 (numeric_operation -> INTNUM .)
    WHILE           reduce using rule 43 (numeric_operation -> INTNUM .)
    FOR             reduce using rule 43 (numeric_operation -> INTNUM .)
    ID              reduce using rule 43 (numeric_operation -> INTNUM .)


state 32

    (44) numeric_operation -> FLOATNUM .

    +               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    -               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    *               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    /               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    ,               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    ;               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    )               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    EQ              reduce using rule 44 (numeric_operation -> FLOATNUM .)
    NEQ             reduce using rule 44 (numeric_operation -> FLOATNUM .)
    LT              reduce using rule 44 (numeric_operation -> FLOATNUM .)
    GT              reduce using rule 44 (numeric_operation -> FLOATNUM .)
    <               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    >               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    ]               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    :               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    PRINT           reduce using rule 44 (numeric_operation -> FLOATNUM .)
    {               reduce using rule 44 (numeric_operation -> FLOATNUM .)
    BREAK           reduce using rule 44 (numeric_operation -> FLOATNUM .)
    CONTINUE        reduce using rule 44 (numeric_operation -> FLOATNUM .)
    RETURN          reduce using rule 44 (numeric_operation -> FLOATNUM .)
    COMMENT         reduce using rule 44 (numeric_operation -> FLOATNUM .)
    IF              reduce using rule 44 (numeric_operation -> FLOATNUM .)
    WHILE           reduce using rule 44 (numeric_operation -> FLOATNUM .)
    FOR             reduce using rule 44 (numeric_operation -> FLOATNUM .)
    ID              reduce using rule 44 (numeric_operation -> FLOATNUM .)


state 33

    (49) matrix_operation -> id_form .

    '               reduce using rule 49 (matrix_operation -> id_form .)
    DOTMUL          reduce using rule 49 (matrix_operation -> id_form .)
    DOTDIV          reduce using rule 49 (matrix_operation -> id_form .)
    DOTADD          reduce using rule 49 (matrix_operation -> id_form .)
    DOTSUB          reduce using rule 49 (matrix_operation -> id_form .)
    ,               reduce using rule 49 (matrix_operation -> id_form .)
    ;               reduce using rule 49 (matrix_operation -> id_form .)
    )               reduce using rule 49 (matrix_operation -> id_form .)
    EQ              reduce using rule 49 (matrix_operation -> id_form .)
    NEQ             reduce using rule 49 (matrix_operation -> id_form .)
    LT              reduce using rule 49 (matrix_operation -> id_form .)
    GT              reduce using rule 49 (matrix_operation -> id_form .)
    <               reduce using rule 49 (matrix_operation -> id_form .)
    >               reduce using rule 49 (matrix_operation -> id_form .)


state 34

    (50) matrix_operation -> fid . ( numeric_operation )

    (               shift and go to state 75


state 35

    (51) matrix_operation -> [ . matrix ]
    (67) matrix -> . vector , matrix
    (68) matrix -> . vector
    (33) vector -> . [ vector_val ]

    [               shift and go to state 76

    matrix                         shift and go to state 77
    vector                         shift and go to state 78

state 36

    (64) fid -> ZEROS .

    (               reduce using rule 64 (fid -> ZEROS .)


state 37

    (65) fid -> ONES .

    (               reduce using rule 65 (fid -> ONES .)


state 38

    (66) fid -> EYE .

    (               reduce using rule 66 (fid -> EYE .)


state 39

    (4) program_ins -> assign ; .

    PRINT           reduce using rule 4 (program_ins -> assign ; .)
    {               reduce using rule 4 (program_ins -> assign ; .)
    BREAK           reduce using rule 4 (program_ins -> assign ; .)
    CONTINUE        reduce using rule 4 (program_ins -> assign ; .)
    RETURN          reduce using rule 4 (program_ins -> assign ; .)
    COMMENT         reduce using rule 4 (program_ins -> assign ; .)
    IF              reduce using rule 4 (program_ins -> assign ; .)
    WHILE           reduce using rule 4 (program_ins -> assign ; .)
    FOR             reduce using rule 4 (program_ins -> assign ; .)
    ID              reduce using rule 4 (program_ins -> assign ; .)
    $end            reduce using rule 4 (program_ins -> assign ; .)
    }               reduce using rule 4 (program_ins -> assign ; .)
    ELSE            reduce using rule 4 (program_ins -> assign ; .)


state 40

    (8) program_ins -> { program . }

    }               shift and go to state 79


state 41

    (9) program_ins -> BREAK ; .

    PRINT           reduce using rule 9 (program_ins -> BREAK ; .)
    {               reduce using rule 9 (program_ins -> BREAK ; .)
    BREAK           reduce using rule 9 (program_ins -> BREAK ; .)
    CONTINUE        reduce using rule 9 (program_ins -> BREAK ; .)
    RETURN          reduce using rule 9 (program_ins -> BREAK ; .)
    COMMENT         reduce using rule 9 (program_ins -> BREAK ; .)
    IF              reduce using rule 9 (program_ins -> BREAK ; .)
    WHILE           reduce using rule 9 (program_ins -> BREAK ; .)
    FOR             reduce using rule 9 (program_ins -> BREAK ; .)
    ID              reduce using rule 9 (program_ins -> BREAK ; .)
    $end            reduce using rule 9 (program_ins -> BREAK ; .)
    }               reduce using rule 9 (program_ins -> BREAK ; .)
    ELSE            reduce using rule 9 (program_ins -> BREAK ; .)


state 42

    (10) program_ins -> CONTINUE ; .

    PRINT           reduce using rule 10 (program_ins -> CONTINUE ; .)
    {               reduce using rule 10 (program_ins -> CONTINUE ; .)
    BREAK           reduce using rule 10 (program_ins -> CONTINUE ; .)
    CONTINUE        reduce using rule 10 (program_ins -> CONTINUE ; .)
    RETURN          reduce using rule 10 (program_ins -> CONTINUE ; .)
    COMMENT         reduce using rule 10 (program_ins -> CONTINUE ; .)
    IF              reduce using rule 10 (program_ins -> CONTINUE ; .)
    WHILE           reduce using rule 10 (program_ins -> CONTINUE ; .)
    FOR             reduce using rule 10 (program_ins -> CONTINUE ; .)
    ID              reduce using rule 10 (program_ins -> CONTINUE ; .)
    $end            reduce using rule 10 (program_ins -> CONTINUE ; .)
    }               reduce using rule 10 (program_ins -> CONTINUE ; .)
    ELSE            reduce using rule 10 (program_ins -> CONTINUE ; .)


state 43

    (11) program_ins -> RETURN operation . ;

    ;               shift and go to state 80


state 44

    (69) cond_instruction -> IF ( . condition ) program_ins
    (70) cond_instruction -> IF ( . condition ) program_ins ELSE program_ins
    (71) condition -> . operation comparison_operator operation
    (26) operation -> . numeric_operation
    (27) operation -> . matrix_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    -               shift and go to state 28
    (               shift and go to state 29
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    condition                      shift and go to state 81
    operation                      shift and go to state 82
    numeric_operation              shift and go to state 25
    matrix_operation               shift and go to state 26
    id                             shift and go to state 30
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 45

    (78) while_instruction -> WHILE ( . condition ) program_ins
    (71) condition -> . operation comparison_operator operation
    (26) operation -> . numeric_operation
    (27) operation -> . matrix_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    -               shift and go to state 28
    (               shift and go to state 29
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    condition                      shift and go to state 83
    operation                      shift and go to state 82
    numeric_operation              shift and go to state 25
    matrix_operation               shift and go to state 26
    id                             shift and go to state 30
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 46

    (79) for_instruction -> FOR id . = range program_ins

    =               shift and go to state 84


state 47

    (17) id_assign -> id = . all_operations
    (19) all_operations -> . operation
    (20) all_operations -> . string
    (26) operation -> . numeric_operation
    (27) operation -> . matrix_operation
    (21) string -> . STRING
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    STRING          shift and go to state 27
    -               shift and go to state 28
    (               shift and go to state 29
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    id                             shift and go to state 30
    all_operations                 shift and go to state 85
    operation                      shift and go to state 23
    string                         shift and go to state 24
    numeric_operation              shift and go to state 25
    matrix_operation               shift and go to state 26
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 48

    (18) id_assign -> id assign_operator . operation
    (26) operation -> . numeric_operation
    (27) operation -> . matrix_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    -               shift and go to state 28
    (               shift and go to state 29
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    id                             shift and go to state 30
    operation                      shift and go to state 86
    numeric_operation              shift and go to state 25
    matrix_operation               shift and go to state 26
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 49

    (28) matrix_assign -> id [ . multiple_index ] = numeric_operation
    (29) matrix_assign -> id [ . multiple_index ] assign_operator numeric_operation
    (30) matrix_assign -> id [ . single_index ] = vector
    (31) multiple_index -> . INTNUM , INTNUM
    (32) single_index -> . INTNUM

    INTNUM          shift and go to state 89

    multiple_index                 shift and go to state 87
    single_index                   shift and go to state 88

state 50

    (22) assign_operator -> ADDASSIGN .

    -               reduce using rule 22 (assign_operator -> ADDASSIGN .)
    (               reduce using rule 22 (assign_operator -> ADDASSIGN .)
    INTNUM          reduce using rule 22 (assign_operator -> ADDASSIGN .)
    FLOATNUM        reduce using rule 22 (assign_operator -> ADDASSIGN .)
    [               reduce using rule 22 (assign_operator -> ADDASSIGN .)
    ID              reduce using rule 22 (assign_operator -> ADDASSIGN .)
    ZEROS           reduce using rule 22 (assign_operator -> ADDASSIGN .)
    ONES            reduce using rule 22 (assign_operator -> ADDASSIGN .)
    EYE             reduce using rule 22 (assign_operator -> ADDASSIGN .)


state 51

    (23) assign_operator -> SUBASSIGN .

    -               reduce using rule 23 (assign_operator -> SUBASSIGN .)
    (               reduce using rule 23 (assign_operator -> SUBASSIGN .)
    INTNUM          reduce using rule 23 (assign_operator -> SUBASSIGN .)
    FLOATNUM        reduce using rule 23 (assign_operator -> SUBASSIGN .)
    [               reduce using rule 23 (assign_operator -> SUBASSIGN .)
    ID              reduce using rule 23 (assign_operator -> SUBASSIGN .)
    ZEROS           reduce using rule 23 (assign_operator -> SUBASSIGN .)
    ONES            reduce using rule 23 (assign_operator -> SUBASSIGN .)
    EYE             reduce using rule 23 (assign_operator -> SUBASSIGN .)


state 52

    (24) assign_operator -> MULASSIGN .

    -               reduce using rule 24 (assign_operator -> MULASSIGN .)
    (               reduce using rule 24 (assign_operator -> MULASSIGN .)
    INTNUM          reduce using rule 24 (assign_operator -> MULASSIGN .)
    FLOATNUM        reduce using rule 24 (assign_operator -> MULASSIGN .)
    [               reduce using rule 24 (assign_operator -> MULASSIGN .)
    ID              reduce using rule 24 (assign_operator -> MULASSIGN .)
    ZEROS           reduce using rule 24 (assign_operator -> MULASSIGN .)
    ONES            reduce using rule 24 (assign_operator -> MULASSIGN .)
    EYE             reduce using rule 24 (assign_operator -> MULASSIGN .)


state 53

    (25) assign_operator -> DIVASSIGN .

    -               reduce using rule 25 (assign_operator -> DIVASSIGN .)
    (               reduce using rule 25 (assign_operator -> DIVASSIGN .)
    INTNUM          reduce using rule 25 (assign_operator -> DIVASSIGN .)
    FLOATNUM        reduce using rule 25 (assign_operator -> DIVASSIGN .)
    [               reduce using rule 25 (assign_operator -> DIVASSIGN .)
    ID              reduce using rule 25 (assign_operator -> DIVASSIGN .)
    ZEROS           reduce using rule 25 (assign_operator -> DIVASSIGN .)
    ONES            reduce using rule 25 (assign_operator -> DIVASSIGN .)
    EYE             reduce using rule 25 (assign_operator -> DIVASSIGN .)


state 54

    (3) program_ins -> PRINT value ; .

    PRINT           reduce using rule 3 (program_ins -> PRINT value ; .)
    {               reduce using rule 3 (program_ins -> PRINT value ; .)
    BREAK           reduce using rule 3 (program_ins -> PRINT value ; .)
    CONTINUE        reduce using rule 3 (program_ins -> PRINT value ; .)
    RETURN          reduce using rule 3 (program_ins -> PRINT value ; .)
    COMMENT         reduce using rule 3 (program_ins -> PRINT value ; .)
    IF              reduce using rule 3 (program_ins -> PRINT value ; .)
    WHILE           reduce using rule 3 (program_ins -> PRINT value ; .)
    FOR             reduce using rule 3 (program_ins -> PRINT value ; .)
    ID              reduce using rule 3 (program_ins -> PRINT value ; .)
    $end            reduce using rule 3 (program_ins -> PRINT value ; .)
    }               reduce using rule 3 (program_ins -> PRINT value ; .)
    ELSE            reduce using rule 3 (program_ins -> PRINT value ; .)


state 55

    (13) value -> all_operations , . value
    (13) value -> . all_operations , value
    (14) value -> . all_operations
    (19) all_operations -> . operation
    (20) all_operations -> . string
    (26) operation -> . numeric_operation
    (27) operation -> . matrix_operation
    (21) string -> . STRING
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    STRING          shift and go to state 27
    -               shift and go to state 28
    (               shift and go to state 29
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    all_operations                 shift and go to state 22
    value                          shift and go to state 90
    operation                      shift and go to state 23
    string                         shift and go to state 24
    numeric_operation              shift and go to state 25
    matrix_operation               shift and go to state 26
    id                             shift and go to state 30
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 56

    (36) numeric_operation -> numeric_operation + . numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    numeric_operation              shift and go to state 91
    id                             shift and go to state 69

state 57

    (37) numeric_operation -> numeric_operation - . numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    numeric_operation              shift and go to state 92
    id                             shift and go to state 69

state 58

    (38) numeric_operation -> numeric_operation * . numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    numeric_operation              shift and go to state 93
    id                             shift and go to state 69

state 59

    (39) numeric_operation -> numeric_operation / . numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    numeric_operation              shift and go to state 94
    id                             shift and go to state 69

state 60

    (45) matrix_operation -> matrix_operation matrix_operator_mul . matrix_operation
    (54) id_form -> matrix_operation matrix_operator_mul . id
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    (               shift and go to state 97
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    matrix_operation               shift and go to state 95
    id                             shift and go to state 96
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 61

    (46) matrix_operation -> matrix_operation matrix_operator_add . matrix_operation
    (57) id_form -> matrix_operation matrix_operator_add . id
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    (               shift and go to state 97
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    matrix_operation               shift and go to state 98
    id                             shift and go to state 99
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 62

    (47) matrix_operation -> matrix_operation ' .

    '               reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    DOTMUL          reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    DOTDIV          reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    DOTADD          reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    DOTSUB          reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    ,               reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    ;               reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    )               reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    EQ              reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    NEQ             reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    LT              reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    GT              reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    <               reduce using rule 47 (matrix_operation -> matrix_operation ' .)
    >               reduce using rule 47 (matrix_operation -> matrix_operation ' .)


state 63

    (59) matrix_operator_mul -> DOTMUL .

    (               reduce using rule 59 (matrix_operator_mul -> DOTMUL .)
    [               reduce using rule 59 (matrix_operator_mul -> DOTMUL .)
    ID              reduce using rule 59 (matrix_operator_mul -> DOTMUL .)
    ZEROS           reduce using rule 59 (matrix_operator_mul -> DOTMUL .)
    ONES            reduce using rule 59 (matrix_operator_mul -> DOTMUL .)
    EYE             reduce using rule 59 (matrix_operator_mul -> DOTMUL .)


state 64

    (60) matrix_operator_mul -> DOTDIV .

    (               reduce using rule 60 (matrix_operator_mul -> DOTDIV .)
    [               reduce using rule 60 (matrix_operator_mul -> DOTDIV .)
    ID              reduce using rule 60 (matrix_operator_mul -> DOTDIV .)
    ZEROS           reduce using rule 60 (matrix_operator_mul -> DOTDIV .)
    ONES            reduce using rule 60 (matrix_operator_mul -> DOTDIV .)
    EYE             reduce using rule 60 (matrix_operator_mul -> DOTDIV .)


state 65

    (61) matrix_operator_add -> DOTADD .

    (               reduce using rule 61 (matrix_operator_add -> DOTADD .)
    [               reduce using rule 61 (matrix_operator_add -> DOTADD .)
    ID              reduce using rule 61 (matrix_operator_add -> DOTADD .)
    ZEROS           reduce using rule 61 (matrix_operator_add -> DOTADD .)
    ONES            reduce using rule 61 (matrix_operator_add -> DOTADD .)
    EYE             reduce using rule 61 (matrix_operator_add -> DOTADD .)


state 66

    (62) matrix_operator_add -> DOTSUB .

    (               reduce using rule 62 (matrix_operator_add -> DOTSUB .)
    [               reduce using rule 62 (matrix_operator_add -> DOTSUB .)
    ID              reduce using rule 62 (matrix_operator_add -> DOTSUB .)
    ZEROS           reduce using rule 62 (matrix_operator_add -> DOTSUB .)
    ONES            reduce using rule 62 (matrix_operator_add -> DOTSUB .)
    EYE             reduce using rule 62 (matrix_operator_add -> DOTSUB .)


state 67

    (40) numeric_operation -> - numeric_operation .
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    +               reduce using rule 40 (numeric_operation -> - numeric_operation .)
    -               reduce using rule 40 (numeric_operation -> - numeric_operation .)
    ,               reduce using rule 40 (numeric_operation -> - numeric_operation .)
    ;               reduce using rule 40 (numeric_operation -> - numeric_operation .)
    )               reduce using rule 40 (numeric_operation -> - numeric_operation .)
    EQ              reduce using rule 40 (numeric_operation -> - numeric_operation .)
    NEQ             reduce using rule 40 (numeric_operation -> - numeric_operation .)
    LT              reduce using rule 40 (numeric_operation -> - numeric_operation .)
    GT              reduce using rule 40 (numeric_operation -> - numeric_operation .)
    <               reduce using rule 40 (numeric_operation -> - numeric_operation .)
    >               reduce using rule 40 (numeric_operation -> - numeric_operation .)
    ]               reduce using rule 40 (numeric_operation -> - numeric_operation .)
    :               reduce using rule 40 (numeric_operation -> - numeric_operation .)
    PRINT           reduce using rule 40 (numeric_operation -> - numeric_operation .)
    {               reduce using rule 40 (numeric_operation -> - numeric_operation .)
    BREAK           reduce using rule 40 (numeric_operation -> - numeric_operation .)
    CONTINUE        reduce using rule 40 (numeric_operation -> - numeric_operation .)
    RETURN          reduce using rule 40 (numeric_operation -> - numeric_operation .)
    COMMENT         reduce using rule 40 (numeric_operation -> - numeric_operation .)
    IF              reduce using rule 40 (numeric_operation -> - numeric_operation .)
    WHILE           reduce using rule 40 (numeric_operation -> - numeric_operation .)
    FOR             reduce using rule 40 (numeric_operation -> - numeric_operation .)
    ID              reduce using rule 40 (numeric_operation -> - numeric_operation .)
    *               shift and go to state 58
    /               shift and go to state 59

  ! *               [ reduce using rule 40 (numeric_operation -> - numeric_operation .) ]
  ! /               [ reduce using rule 40 (numeric_operation -> - numeric_operation .) ]
  ! +               [ shift and go to state 56 ]
  ! -               [ shift and go to state 57 ]


state 68

    (41) numeric_operation -> ( . numeric_operation )
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    numeric_operation              shift and go to state 70
    id                             shift and go to state 69

state 69

    (42) numeric_operation -> id .

    +               reduce using rule 42 (numeric_operation -> id .)
    -               reduce using rule 42 (numeric_operation -> id .)
    *               reduce using rule 42 (numeric_operation -> id .)
    /               reduce using rule 42 (numeric_operation -> id .)
    ,               reduce using rule 42 (numeric_operation -> id .)
    ;               reduce using rule 42 (numeric_operation -> id .)
    )               reduce using rule 42 (numeric_operation -> id .)
    EQ              reduce using rule 42 (numeric_operation -> id .)
    NEQ             reduce using rule 42 (numeric_operation -> id .)
    LT              reduce using rule 42 (numeric_operation -> id .)
    GT              reduce using rule 42 (numeric_operation -> id .)
    <               reduce using rule 42 (numeric_operation -> id .)
    >               reduce using rule 42 (numeric_operation -> id .)
    ]               reduce using rule 42 (numeric_operation -> id .)
    :               reduce using rule 42 (numeric_operation -> id .)
    PRINT           reduce using rule 42 (numeric_operation -> id .)
    {               reduce using rule 42 (numeric_operation -> id .)
    BREAK           reduce using rule 42 (numeric_operation -> id .)
    CONTINUE        reduce using rule 42 (numeric_operation -> id .)
    RETURN          reduce using rule 42 (numeric_operation -> id .)
    COMMENT         reduce using rule 42 (numeric_operation -> id .)
    IF              reduce using rule 42 (numeric_operation -> id .)
    WHILE           reduce using rule 42 (numeric_operation -> id .)
    FOR             reduce using rule 42 (numeric_operation -> id .)
    ID              reduce using rule 42 (numeric_operation -> id .)


state 70

    (41) numeric_operation -> ( numeric_operation . )
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    )               shift and go to state 100
    +               shift and go to state 56
    -               shift and go to state 57
    *               shift and go to state 58
    /               shift and go to state 59


state 71

    (48) matrix_operation -> ( matrix_operation . )
    (45) matrix_operation -> matrix_operation . matrix_operator_mul matrix_operation
    (46) matrix_operation -> matrix_operation . matrix_operator_add matrix_operation
    (47) matrix_operation -> matrix_operation . '
    (54) id_form -> matrix_operation . matrix_operator_mul id
    (57) id_form -> matrix_operation . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    )               shift and go to state 101
    '               shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    DOTADD          shift and go to state 65
    DOTSUB          shift and go to state 66

    matrix_operator_mul            shift and go to state 60
    matrix_operator_add            shift and go to state 61

state 72

    (52) id_form -> id ' .

    '               reduce using rule 52 (id_form -> id ' .)
    DOTMUL          reduce using rule 52 (id_form -> id ' .)
    DOTDIV          reduce using rule 52 (id_form -> id ' .)
    DOTADD          reduce using rule 52 (id_form -> id ' .)
    DOTSUB          reduce using rule 52 (id_form -> id ' .)
    ,               reduce using rule 52 (id_form -> id ' .)
    ;               reduce using rule 52 (id_form -> id ' .)
    )               reduce using rule 52 (id_form -> id ' .)
    EQ              reduce using rule 52 (id_form -> id ' .)
    NEQ             reduce using rule 52 (id_form -> id ' .)
    LT              reduce using rule 52 (id_form -> id ' .)
    GT              reduce using rule 52 (id_form -> id ' .)
    <               reduce using rule 52 (id_form -> id ' .)
    >               reduce using rule 52 (id_form -> id ' .)


state 73

    (53) id_form -> id matrix_operator_mul . matrix_operation
    (55) id_form -> id matrix_operator_mul . id
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    (               shift and go to state 97
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    id                             shift and go to state 102
    matrix_operation               shift and go to state 103
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 74

    (56) id_form -> id matrix_operator_add . matrix_operation
    (58) id_form -> id matrix_operator_add . id
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    (               shift and go to state 97
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    id                             shift and go to state 104
    matrix_operation               shift and go to state 105
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 75

    (50) matrix_operation -> fid ( . numeric_operation )
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    numeric_operation              shift and go to state 106
    id                             shift and go to state 69

state 76

    (33) vector -> [ . vector_val ]
    (34) vector_val -> . numeric_operation , vector_val
    (35) vector_val -> . numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    vector_val                     shift and go to state 107
    numeric_operation              shift and go to state 108
    id                             shift and go to state 69

state 77

    (51) matrix_operation -> [ matrix . ]

    ]               shift and go to state 109


state 78

    (67) matrix -> vector . , matrix
    (68) matrix -> vector .

    ,               shift and go to state 110
    ]               reduce using rule 68 (matrix -> vector .)


state 79

    (8) program_ins -> { program } .

    PRINT           reduce using rule 8 (program_ins -> { program } .)
    {               reduce using rule 8 (program_ins -> { program } .)
    BREAK           reduce using rule 8 (program_ins -> { program } .)
    CONTINUE        reduce using rule 8 (program_ins -> { program } .)
    RETURN          reduce using rule 8 (program_ins -> { program } .)
    COMMENT         reduce using rule 8 (program_ins -> { program } .)
    IF              reduce using rule 8 (program_ins -> { program } .)
    WHILE           reduce using rule 8 (program_ins -> { program } .)
    FOR             reduce using rule 8 (program_ins -> { program } .)
    ID              reduce using rule 8 (program_ins -> { program } .)
    $end            reduce using rule 8 (program_ins -> { program } .)
    }               reduce using rule 8 (program_ins -> { program } .)
    ELSE            reduce using rule 8 (program_ins -> { program } .)


state 80

    (11) program_ins -> RETURN operation ; .

    PRINT           reduce using rule 11 (program_ins -> RETURN operation ; .)
    {               reduce using rule 11 (program_ins -> RETURN operation ; .)
    BREAK           reduce using rule 11 (program_ins -> RETURN operation ; .)
    CONTINUE        reduce using rule 11 (program_ins -> RETURN operation ; .)
    RETURN          reduce using rule 11 (program_ins -> RETURN operation ; .)
    COMMENT         reduce using rule 11 (program_ins -> RETURN operation ; .)
    IF              reduce using rule 11 (program_ins -> RETURN operation ; .)
    WHILE           reduce using rule 11 (program_ins -> RETURN operation ; .)
    FOR             reduce using rule 11 (program_ins -> RETURN operation ; .)
    ID              reduce using rule 11 (program_ins -> RETURN operation ; .)
    $end            reduce using rule 11 (program_ins -> RETURN operation ; .)
    }               reduce using rule 11 (program_ins -> RETURN operation ; .)
    ELSE            reduce using rule 11 (program_ins -> RETURN operation ; .)


state 81

    (69) cond_instruction -> IF ( condition . ) program_ins
    (70) cond_instruction -> IF ( condition . ) program_ins ELSE program_ins

    )               shift and go to state 111


state 82

    (71) condition -> operation . comparison_operator operation
    (72) comparison_operator -> . EQ
    (73) comparison_operator -> . NEQ
    (74) comparison_operator -> . LT
    (75) comparison_operator -> . GT
    (76) comparison_operator -> . <
    (77) comparison_operator -> . >

    EQ              shift and go to state 113
    NEQ             shift and go to state 114
    LT              shift and go to state 115
    GT              shift and go to state 116
    <               shift and go to state 117
    >               shift and go to state 118

    comparison_operator            shift and go to state 112

state 83

    (78) while_instruction -> WHILE ( condition . ) program_ins

    )               shift and go to state 119


state 84

    (79) for_instruction -> FOR id = . range program_ins
    (80) range -> . numeric_operation : numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    id                             shift and go to state 69
    range                          shift and go to state 120
    numeric_operation              shift and go to state 121

state 85

    (17) id_assign -> id = all_operations .

    ;               reduce using rule 17 (id_assign -> id = all_operations .)


state 86

    (18) id_assign -> id assign_operator operation .

    ;               reduce using rule 18 (id_assign -> id assign_operator operation .)


state 87

    (28) matrix_assign -> id [ multiple_index . ] = numeric_operation
    (29) matrix_assign -> id [ multiple_index . ] assign_operator numeric_operation

    ]               shift and go to state 122


state 88

    (30) matrix_assign -> id [ single_index . ] = vector

    ]               shift and go to state 123


state 89

    (31) multiple_index -> INTNUM . , INTNUM
    (32) single_index -> INTNUM .

    ,               shift and go to state 124
    ]               reduce using rule 32 (single_index -> INTNUM .)


state 90

    (13) value -> all_operations , value .

    ;               reduce using rule 13 (value -> all_operations , value .)


state 91

    (36) numeric_operation -> numeric_operation + numeric_operation .
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    +               reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    -               reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    ,               reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    ;               reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    )               reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    EQ              reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    NEQ             reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    LT              reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    GT              reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    <               reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    >               reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    ]               reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    :               reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    PRINT           reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    {               reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    BREAK           reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    CONTINUE        reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    RETURN          reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    COMMENT         reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    IF              reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    WHILE           reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    FOR             reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    ID              reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .)
    *               shift and go to state 58
    /               shift and go to state 59

  ! *               [ reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .) ]
  ! /               [ reduce using rule 36 (numeric_operation -> numeric_operation + numeric_operation .) ]
  ! +               [ shift and go to state 56 ]
  ! -               [ shift and go to state 57 ]


state 92

    (37) numeric_operation -> numeric_operation - numeric_operation .
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    +               reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    -               reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    ,               reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    ;               reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    )               reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    EQ              reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    NEQ             reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    LT              reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    GT              reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    <               reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    >               reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    ]               reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    :               reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    PRINT           reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    {               reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    BREAK           reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    CONTINUE        reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    RETURN          reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    COMMENT         reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    IF              reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    WHILE           reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    FOR             reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    ID              reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .)
    *               shift and go to state 58
    /               shift and go to state 59

  ! *               [ reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .) ]
  ! /               [ reduce using rule 37 (numeric_operation -> numeric_operation - numeric_operation .) ]
  ! +               [ shift and go to state 56 ]
  ! -               [ shift and go to state 57 ]


state 93

    (38) numeric_operation -> numeric_operation * numeric_operation .
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    +               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    -               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    *               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    /               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    ,               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    ;               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    )               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    EQ              reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    NEQ             reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    LT              reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    GT              reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    <               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    >               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    ]               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    :               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    PRINT           reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    {               reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    BREAK           reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    CONTINUE        reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    RETURN          reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    COMMENT         reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    IF              reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    WHILE           reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    FOR             reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)
    ID              reduce using rule 38 (numeric_operation -> numeric_operation * numeric_operation .)

  ! +               [ shift and go to state 56 ]
  ! -               [ shift and go to state 57 ]
  ! *               [ shift and go to state 58 ]
  ! /               [ shift and go to state 59 ]


state 94

    (39) numeric_operation -> numeric_operation / numeric_operation .
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    +               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    -               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    *               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    /               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    ,               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    ;               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    )               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    EQ              reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    NEQ             reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    LT              reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    GT              reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    <               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    >               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    ]               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    :               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    PRINT           reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    {               reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    BREAK           reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    CONTINUE        reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    RETURN          reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    COMMENT         reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    IF              reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    WHILE           reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    FOR             reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)
    ID              reduce using rule 39 (numeric_operation -> numeric_operation / numeric_operation .)

  ! +               [ shift and go to state 56 ]
  ! -               [ shift and go to state 57 ]
  ! *               [ shift and go to state 58 ]
  ! /               [ shift and go to state 59 ]


state 95

    (45) matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .
    (45) matrix_operation -> matrix_operation . matrix_operator_mul matrix_operation
    (46) matrix_operation -> matrix_operation . matrix_operator_add matrix_operation
    (47) matrix_operation -> matrix_operation . '
    (54) id_form -> matrix_operation . matrix_operator_mul id
    (57) id_form -> matrix_operation . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    DOTMUL          reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    DOTDIV          reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    DOTADD          reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    DOTSUB          reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    ,               reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    ;               reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    )               reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    EQ              reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    NEQ             reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    LT              reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    GT              reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    <               reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    >               reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .)
    '               shift and go to state 62

  ! '               [ reduce using rule 45 (matrix_operation -> matrix_operation matrix_operator_mul matrix_operation .) ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! DOTADD          [ shift and go to state 65 ]
  ! DOTSUB          [ shift and go to state 66 ]

    matrix_operator_mul            shift and go to state 60
    matrix_operator_add            shift and go to state 61

state 96

    (54) id_form -> matrix_operation matrix_operator_mul id .
    (52) id_form -> id . '
    (53) id_form -> id . matrix_operator_mul matrix_operation
    (55) id_form -> id . matrix_operator_mul id
    (56) id_form -> id . matrix_operator_add matrix_operation
    (58) id_form -> id . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    DOTMUL          reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    DOTDIV          reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    DOTADD          reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    DOTSUB          reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    ,               reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    ;               reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    )               reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    EQ              reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    NEQ             reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    LT              reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    GT              reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    <               reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    >               reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .)
    '               shift and go to state 72

  ! '               [ reduce using rule 54 (id_form -> matrix_operation matrix_operator_mul id .) ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! DOTADD          [ shift and go to state 65 ]
  ! DOTSUB          [ shift and go to state 66 ]

    matrix_operator_mul            shift and go to state 73
    matrix_operator_add            shift and go to state 74

state 97

    (48) matrix_operation -> ( . matrix_operation )
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE
    (63) id -> . ID

    (               shift and go to state 97
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 19

    matrix_operation               shift and go to state 71
    id_form                        shift and go to state 33
    fid                            shift and go to state 34
    id                             shift and go to state 125

state 98

    (46) matrix_operation -> matrix_operation matrix_operator_add matrix_operation .
    (45) matrix_operation -> matrix_operation . matrix_operator_mul matrix_operation
    (46) matrix_operation -> matrix_operation . matrix_operator_add matrix_operation
    (47) matrix_operation -> matrix_operation . '
    (54) id_form -> matrix_operation . matrix_operator_mul id
    (57) id_form -> matrix_operation . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    DOTMUL          reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    DOTDIV          reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    DOTADD          reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    DOTSUB          reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    ,               reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    ;               reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    )               reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    EQ              reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    NEQ             reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    LT              reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    GT              reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    <               reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    >               reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .)
    '               shift and go to state 62

  ! '               [ reduce using rule 46 (matrix_operation -> matrix_operation matrix_operator_add matrix_operation .) ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! DOTADD          [ shift and go to state 65 ]
  ! DOTSUB          [ shift and go to state 66 ]

    matrix_operator_add            shift and go to state 61
    matrix_operator_mul            shift and go to state 60

state 99

    (57) id_form -> matrix_operation matrix_operator_add id .
    (52) id_form -> id . '
    (53) id_form -> id . matrix_operator_mul matrix_operation
    (55) id_form -> id . matrix_operator_mul id
    (56) id_form -> id . matrix_operator_add matrix_operation
    (58) id_form -> id . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    DOTMUL          reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    DOTDIV          reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    DOTADD          reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    DOTSUB          reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    ,               reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    ;               reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    )               reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    EQ              reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    NEQ             reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    LT              reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    GT              reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    <               reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    >               reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .)
    '               shift and go to state 72

  ! '               [ reduce using rule 57 (id_form -> matrix_operation matrix_operator_add id .) ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! DOTADD          [ shift and go to state 65 ]
  ! DOTSUB          [ shift and go to state 66 ]

    matrix_operator_add            shift and go to state 74
    matrix_operator_mul            shift and go to state 73

state 100

    (41) numeric_operation -> ( numeric_operation ) .

    +               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    -               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    *               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    /               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    ,               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    ;               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    )               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    EQ              reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    NEQ             reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    LT              reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    GT              reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    <               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    >               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    ]               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    :               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    PRINT           reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    {               reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    BREAK           reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    CONTINUE        reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    RETURN          reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    COMMENT         reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    IF              reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    WHILE           reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    FOR             reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)
    ID              reduce using rule 41 (numeric_operation -> ( numeric_operation ) .)


state 101

    (48) matrix_operation -> ( matrix_operation ) .

    '               reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    DOTMUL          reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    DOTDIV          reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    DOTADD          reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    DOTSUB          reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    ,               reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    ;               reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    )               reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    EQ              reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    NEQ             reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    LT              reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    GT              reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    <               reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)
    >               reduce using rule 48 (matrix_operation -> ( matrix_operation ) .)


state 102

    (55) id_form -> id matrix_operator_mul id .
    (52) id_form -> id . '
    (53) id_form -> id . matrix_operator_mul matrix_operation
    (55) id_form -> id . matrix_operator_mul id
    (56) id_form -> id . matrix_operator_add matrix_operation
    (58) id_form -> id . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    DOTMUL          reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    DOTDIV          reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    DOTADD          reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    DOTSUB          reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    ,               reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    ;               reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    )               reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    EQ              reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    NEQ             reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    LT              reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    GT              reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    <               reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    >               reduce using rule 55 (id_form -> id matrix_operator_mul id .)
    '               shift and go to state 72

  ! '               [ reduce using rule 55 (id_form -> id matrix_operator_mul id .) ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! DOTADD          [ shift and go to state 65 ]
  ! DOTSUB          [ shift and go to state 66 ]

    matrix_operator_mul            shift and go to state 73
    matrix_operator_add            shift and go to state 74

state 103

    (53) id_form -> id matrix_operator_mul matrix_operation .
    (45) matrix_operation -> matrix_operation . matrix_operator_mul matrix_operation
    (46) matrix_operation -> matrix_operation . matrix_operator_add matrix_operation
    (47) matrix_operation -> matrix_operation . '
    (54) id_form -> matrix_operation . matrix_operator_mul id
    (57) id_form -> matrix_operation . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    DOTMUL          reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    DOTDIV          reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    DOTADD          reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    DOTSUB          reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    ,               reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    ;               reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    )               reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    EQ              reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    NEQ             reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    LT              reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    GT              reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    <               reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    >               reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .)
    '               shift and go to state 62

  ! '               [ reduce using rule 53 (id_form -> id matrix_operator_mul matrix_operation .) ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! DOTADD          [ shift and go to state 65 ]
  ! DOTSUB          [ shift and go to state 66 ]

    matrix_operator_mul            shift and go to state 60
    matrix_operator_add            shift and go to state 61

state 104

    (58) id_form -> id matrix_operator_add id .
    (52) id_form -> id . '
    (53) id_form -> id . matrix_operator_mul matrix_operation
    (55) id_form -> id . matrix_operator_mul id
    (56) id_form -> id . matrix_operator_add matrix_operation
    (58) id_form -> id . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    DOTMUL          reduce using rule 58 (id_form -> id matrix_operator_add id .)
    DOTDIV          reduce using rule 58 (id_form -> id matrix_operator_add id .)
    DOTADD          reduce using rule 58 (id_form -> id matrix_operator_add id .)
    DOTSUB          reduce using rule 58 (id_form -> id matrix_operator_add id .)
    ,               reduce using rule 58 (id_form -> id matrix_operator_add id .)
    ;               reduce using rule 58 (id_form -> id matrix_operator_add id .)
    )               reduce using rule 58 (id_form -> id matrix_operator_add id .)
    EQ              reduce using rule 58 (id_form -> id matrix_operator_add id .)
    NEQ             reduce using rule 58 (id_form -> id matrix_operator_add id .)
    LT              reduce using rule 58 (id_form -> id matrix_operator_add id .)
    GT              reduce using rule 58 (id_form -> id matrix_operator_add id .)
    <               reduce using rule 58 (id_form -> id matrix_operator_add id .)
    >               reduce using rule 58 (id_form -> id matrix_operator_add id .)
    '               shift and go to state 72

  ! '               [ reduce using rule 58 (id_form -> id matrix_operator_add id .) ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! DOTADD          [ shift and go to state 65 ]
  ! DOTSUB          [ shift and go to state 66 ]

    matrix_operator_add            shift and go to state 74
    matrix_operator_mul            shift and go to state 73

state 105

    (56) id_form -> id matrix_operator_add matrix_operation .
    (45) matrix_operation -> matrix_operation . matrix_operator_mul matrix_operation
    (46) matrix_operation -> matrix_operation . matrix_operator_add matrix_operation
    (47) matrix_operation -> matrix_operation . '
    (54) id_form -> matrix_operation . matrix_operator_mul id
    (57) id_form -> matrix_operation . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    DOTMUL          reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    DOTDIV          reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    DOTADD          reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    DOTSUB          reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    ,               reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    ;               reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    )               reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    EQ              reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    NEQ             reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    LT              reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    GT              reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    <               reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    >               reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .)
    '               shift and go to state 62

  ! '               [ reduce using rule 56 (id_form -> id matrix_operator_add matrix_operation .) ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! DOTADD          [ shift and go to state 65 ]
  ! DOTSUB          [ shift and go to state 66 ]

    matrix_operator_add            shift and go to state 61
    matrix_operator_mul            shift and go to state 60

state 106

    (50) matrix_operation -> fid ( numeric_operation . )
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    )               shift and go to state 126
    +               shift and go to state 56
    -               shift and go to state 57
    *               shift and go to state 58
    /               shift and go to state 59


state 107

    (33) vector -> [ vector_val . ]

    ]               shift and go to state 127


state 108

    (34) vector_val -> numeric_operation . , vector_val
    (35) vector_val -> numeric_operation .
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    ,               shift and go to state 128
    ]               reduce using rule 35 (vector_val -> numeric_operation .)
    +               shift and go to state 56
    -               shift and go to state 57
    *               shift and go to state 58
    /               shift and go to state 59


state 109

    (51) matrix_operation -> [ matrix ] .

    '               reduce using rule 51 (matrix_operation -> [ matrix ] .)
    DOTMUL          reduce using rule 51 (matrix_operation -> [ matrix ] .)
    DOTDIV          reduce using rule 51 (matrix_operation -> [ matrix ] .)
    DOTADD          reduce using rule 51 (matrix_operation -> [ matrix ] .)
    DOTSUB          reduce using rule 51 (matrix_operation -> [ matrix ] .)
    ,               reduce using rule 51 (matrix_operation -> [ matrix ] .)
    ;               reduce using rule 51 (matrix_operation -> [ matrix ] .)
    )               reduce using rule 51 (matrix_operation -> [ matrix ] .)
    EQ              reduce using rule 51 (matrix_operation -> [ matrix ] .)
    NEQ             reduce using rule 51 (matrix_operation -> [ matrix ] .)
    LT              reduce using rule 51 (matrix_operation -> [ matrix ] .)
    GT              reduce using rule 51 (matrix_operation -> [ matrix ] .)
    <               reduce using rule 51 (matrix_operation -> [ matrix ] .)
    >               reduce using rule 51 (matrix_operation -> [ matrix ] .)


state 110

    (67) matrix -> vector , . matrix
    (67) matrix -> . vector , matrix
    (68) matrix -> . vector
    (33) vector -> . [ vector_val ]

    [               shift and go to state 76

    vector                         shift and go to state 78
    matrix                         shift and go to state 129

state 111

    (69) cond_instruction -> IF ( condition ) . program_ins
    (70) cond_instruction -> IF ( condition ) . program_ins ELSE program_ins
    (3) program_ins -> . PRINT value ;
    (4) program_ins -> . assign ;
    (5) program_ins -> . cond_instruction
    (6) program_ins -> . while_instruction
    (7) program_ins -> . for_instruction
    (8) program_ins -> . { program }
    (9) program_ins -> . BREAK ;
    (10) program_ins -> . CONTINUE ;
    (11) program_ins -> . RETURN operation ;
    (12) program_ins -> . COMMENT
    (15) assign -> . id_assign
    (16) assign -> . matrix_assign
    (69) cond_instruction -> . IF ( condition ) program_ins
    (70) cond_instruction -> . IF ( condition ) program_ins ELSE program_ins
    (78) while_instruction -> . WHILE ( condition ) program_ins
    (79) for_instruction -> . FOR id = range program_ins
    (17) id_assign -> . id = all_operations
    (18) id_assign -> . id assign_operator operation
    (28) matrix_assign -> . id [ multiple_index ] = numeric_operation
    (29) matrix_assign -> . id [ multiple_index ] assign_operator numeric_operation
    (30) matrix_assign -> . id [ single_index ] = vector
    (63) id -> . ID

    PRINT           shift and go to state 3
    {               shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    COMMENT         shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    ID              shift and go to state 19

    program_ins                    shift and go to state 130
    assign                         shift and go to state 4
    cond_instruction               shift and go to state 5
    while_instruction              shift and go to state 6
    for_instruction                shift and go to state 7
    id_assign                      shift and go to state 13
    matrix_assign                  shift and go to state 14
    id                             shift and go to state 18

state 112

    (71) condition -> operation comparison_operator . operation
    (26) operation -> . numeric_operation
    (27) operation -> . matrix_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (45) matrix_operation -> . matrix_operation matrix_operator_mul matrix_operation
    (46) matrix_operation -> . matrix_operation matrix_operator_add matrix_operation
    (47) matrix_operation -> . matrix_operation '
    (48) matrix_operation -> . ( matrix_operation )
    (49) matrix_operation -> . id_form
    (50) matrix_operation -> . fid ( numeric_operation )
    (51) matrix_operation -> . [ matrix ]
    (63) id -> . ID
    (52) id_form -> . id '
    (53) id_form -> . id matrix_operator_mul matrix_operation
    (54) id_form -> . matrix_operation matrix_operator_mul id
    (55) id_form -> . id matrix_operator_mul id
    (56) id_form -> . id matrix_operator_add matrix_operation
    (57) id_form -> . matrix_operation matrix_operator_add id
    (58) id_form -> . id matrix_operator_add id
    (64) fid -> . ZEROS
    (65) fid -> . ONES
    (66) fid -> . EYE

    -               shift and go to state 28
    (               shift and go to state 29
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    [               shift and go to state 35
    ID              shift and go to state 19
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    EYE             shift and go to state 38

    operation                      shift and go to state 131
    numeric_operation              shift and go to state 25
    matrix_operation               shift and go to state 26
    id                             shift and go to state 30
    id_form                        shift and go to state 33
    fid                            shift and go to state 34

state 113

    (72) comparison_operator -> EQ .

    -               reduce using rule 72 (comparison_operator -> EQ .)
    (               reduce using rule 72 (comparison_operator -> EQ .)
    INTNUM          reduce using rule 72 (comparison_operator -> EQ .)
    FLOATNUM        reduce using rule 72 (comparison_operator -> EQ .)
    [               reduce using rule 72 (comparison_operator -> EQ .)
    ID              reduce using rule 72 (comparison_operator -> EQ .)
    ZEROS           reduce using rule 72 (comparison_operator -> EQ .)
    ONES            reduce using rule 72 (comparison_operator -> EQ .)
    EYE             reduce using rule 72 (comparison_operator -> EQ .)


state 114

    (73) comparison_operator -> NEQ .

    -               reduce using rule 73 (comparison_operator -> NEQ .)
    (               reduce using rule 73 (comparison_operator -> NEQ .)
    INTNUM          reduce using rule 73 (comparison_operator -> NEQ .)
    FLOATNUM        reduce using rule 73 (comparison_operator -> NEQ .)
    [               reduce using rule 73 (comparison_operator -> NEQ .)
    ID              reduce using rule 73 (comparison_operator -> NEQ .)
    ZEROS           reduce using rule 73 (comparison_operator -> NEQ .)
    ONES            reduce using rule 73 (comparison_operator -> NEQ .)
    EYE             reduce using rule 73 (comparison_operator -> NEQ .)


state 115

    (74) comparison_operator -> LT .

    -               reduce using rule 74 (comparison_operator -> LT .)
    (               reduce using rule 74 (comparison_operator -> LT .)
    INTNUM          reduce using rule 74 (comparison_operator -> LT .)
    FLOATNUM        reduce using rule 74 (comparison_operator -> LT .)
    [               reduce using rule 74 (comparison_operator -> LT .)
    ID              reduce using rule 74 (comparison_operator -> LT .)
    ZEROS           reduce using rule 74 (comparison_operator -> LT .)
    ONES            reduce using rule 74 (comparison_operator -> LT .)
    EYE             reduce using rule 74 (comparison_operator -> LT .)


state 116

    (75) comparison_operator -> GT .

    -               reduce using rule 75 (comparison_operator -> GT .)
    (               reduce using rule 75 (comparison_operator -> GT .)
    INTNUM          reduce using rule 75 (comparison_operator -> GT .)
    FLOATNUM        reduce using rule 75 (comparison_operator -> GT .)
    [               reduce using rule 75 (comparison_operator -> GT .)
    ID              reduce using rule 75 (comparison_operator -> GT .)
    ZEROS           reduce using rule 75 (comparison_operator -> GT .)
    ONES            reduce using rule 75 (comparison_operator -> GT .)
    EYE             reduce using rule 75 (comparison_operator -> GT .)


state 117

    (76) comparison_operator -> < .

    -               reduce using rule 76 (comparison_operator -> < .)
    (               reduce using rule 76 (comparison_operator -> < .)
    INTNUM          reduce using rule 76 (comparison_operator -> < .)
    FLOATNUM        reduce using rule 76 (comparison_operator -> < .)
    [               reduce using rule 76 (comparison_operator -> < .)
    ID              reduce using rule 76 (comparison_operator -> < .)
    ZEROS           reduce using rule 76 (comparison_operator -> < .)
    ONES            reduce using rule 76 (comparison_operator -> < .)
    EYE             reduce using rule 76 (comparison_operator -> < .)


state 118

    (77) comparison_operator -> > .

    -               reduce using rule 77 (comparison_operator -> > .)
    (               reduce using rule 77 (comparison_operator -> > .)
    INTNUM          reduce using rule 77 (comparison_operator -> > .)
    FLOATNUM        reduce using rule 77 (comparison_operator -> > .)
    [               reduce using rule 77 (comparison_operator -> > .)
    ID              reduce using rule 77 (comparison_operator -> > .)
    ZEROS           reduce using rule 77 (comparison_operator -> > .)
    ONES            reduce using rule 77 (comparison_operator -> > .)
    EYE             reduce using rule 77 (comparison_operator -> > .)


state 119

    (78) while_instruction -> WHILE ( condition ) . program_ins
    (3) program_ins -> . PRINT value ;
    (4) program_ins -> . assign ;
    (5) program_ins -> . cond_instruction
    (6) program_ins -> . while_instruction
    (7) program_ins -> . for_instruction
    (8) program_ins -> . { program }
    (9) program_ins -> . BREAK ;
    (10) program_ins -> . CONTINUE ;
    (11) program_ins -> . RETURN operation ;
    (12) program_ins -> . COMMENT
    (15) assign -> . id_assign
    (16) assign -> . matrix_assign
    (69) cond_instruction -> . IF ( condition ) program_ins
    (70) cond_instruction -> . IF ( condition ) program_ins ELSE program_ins
    (78) while_instruction -> . WHILE ( condition ) program_ins
    (79) for_instruction -> . FOR id = range program_ins
    (17) id_assign -> . id = all_operations
    (18) id_assign -> . id assign_operator operation
    (28) matrix_assign -> . id [ multiple_index ] = numeric_operation
    (29) matrix_assign -> . id [ multiple_index ] assign_operator numeric_operation
    (30) matrix_assign -> . id [ single_index ] = vector
    (63) id -> . ID

    PRINT           shift and go to state 3
    {               shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    COMMENT         shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    ID              shift and go to state 19

    program_ins                    shift and go to state 132
    assign                         shift and go to state 4
    cond_instruction               shift and go to state 5
    while_instruction              shift and go to state 6
    for_instruction                shift and go to state 7
    id_assign                      shift and go to state 13
    matrix_assign                  shift and go to state 14
    id                             shift and go to state 18

state 120

    (79) for_instruction -> FOR id = range . program_ins
    (3) program_ins -> . PRINT value ;
    (4) program_ins -> . assign ;
    (5) program_ins -> . cond_instruction
    (6) program_ins -> . while_instruction
    (7) program_ins -> . for_instruction
    (8) program_ins -> . { program }
    (9) program_ins -> . BREAK ;
    (10) program_ins -> . CONTINUE ;
    (11) program_ins -> . RETURN operation ;
    (12) program_ins -> . COMMENT
    (15) assign -> . id_assign
    (16) assign -> . matrix_assign
    (69) cond_instruction -> . IF ( condition ) program_ins
    (70) cond_instruction -> . IF ( condition ) program_ins ELSE program_ins
    (78) while_instruction -> . WHILE ( condition ) program_ins
    (79) for_instruction -> . FOR id = range program_ins
    (17) id_assign -> . id = all_operations
    (18) id_assign -> . id assign_operator operation
    (28) matrix_assign -> . id [ multiple_index ] = numeric_operation
    (29) matrix_assign -> . id [ multiple_index ] assign_operator numeric_operation
    (30) matrix_assign -> . id [ single_index ] = vector
    (63) id -> . ID

    PRINT           shift and go to state 3
    {               shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    COMMENT         shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    ID              shift and go to state 19

    id                             shift and go to state 18
    program_ins                    shift and go to state 133
    assign                         shift and go to state 4
    cond_instruction               shift and go to state 5
    while_instruction              shift and go to state 6
    for_instruction                shift and go to state 7
    id_assign                      shift and go to state 13
    matrix_assign                  shift and go to state 14

state 121

    (80) range -> numeric_operation . : numeric_operation
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    :               shift and go to state 134
    +               shift and go to state 56
    -               shift and go to state 57
    *               shift and go to state 58
    /               shift and go to state 59


state 122

    (28) matrix_assign -> id [ multiple_index ] . = numeric_operation
    (29) matrix_assign -> id [ multiple_index ] . assign_operator numeric_operation
    (22) assign_operator -> . ADDASSIGN
    (23) assign_operator -> . SUBASSIGN
    (24) assign_operator -> . MULASSIGN
    (25) assign_operator -> . DIVASSIGN

    =               shift and go to state 135
    ADDASSIGN       shift and go to state 50
    SUBASSIGN       shift and go to state 51
    MULASSIGN       shift and go to state 52
    DIVASSIGN       shift and go to state 53

    assign_operator                shift and go to state 136

state 123

    (30) matrix_assign -> id [ single_index ] . = vector

    =               shift and go to state 137


state 124

    (31) multiple_index -> INTNUM , . INTNUM

    INTNUM          shift and go to state 138


state 125

    (52) id_form -> id . '
    (53) id_form -> id . matrix_operator_mul matrix_operation
    (55) id_form -> id . matrix_operator_mul id
    (56) id_form -> id . matrix_operator_add matrix_operation
    (58) id_form -> id . matrix_operator_add id
    (59) matrix_operator_mul -> . DOTMUL
    (60) matrix_operator_mul -> . DOTDIV
    (61) matrix_operator_add -> . DOTADD
    (62) matrix_operator_add -> . DOTSUB

    '               shift and go to state 72
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    DOTADD          shift and go to state 65
    DOTSUB          shift and go to state 66

    matrix_operator_mul            shift and go to state 73
    matrix_operator_add            shift and go to state 74

state 126

    (50) matrix_operation -> fid ( numeric_operation ) .

    '               reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    DOTMUL          reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    DOTDIV          reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    DOTADD          reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    DOTSUB          reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    ,               reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    ;               reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    )               reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    EQ              reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    NEQ             reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    LT              reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    GT              reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    <               reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)
    >               reduce using rule 50 (matrix_operation -> fid ( numeric_operation ) .)


state 127

    (33) vector -> [ vector_val ] .

    ,               reduce using rule 33 (vector -> [ vector_val ] .)
    ]               reduce using rule 33 (vector -> [ vector_val ] .)
    ;               reduce using rule 33 (vector -> [ vector_val ] .)


state 128

    (34) vector_val -> numeric_operation , . vector_val
    (34) vector_val -> . numeric_operation , vector_val
    (35) vector_val -> . numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    numeric_operation              shift and go to state 108
    vector_val                     shift and go to state 139
    id                             shift and go to state 69

state 129

    (67) matrix -> vector , matrix .

    ]               reduce using rule 67 (matrix -> vector , matrix .)


state 130

    (69) cond_instruction -> IF ( condition ) program_ins .
    (70) cond_instruction -> IF ( condition ) program_ins . ELSE program_ins

    PRINT           reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    {               reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    BREAK           reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    CONTINUE        reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    RETURN          reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    COMMENT         reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    IF              reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    WHILE           reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    FOR             reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    ID              reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    $end            reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    }               reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .)
    ELSE            shift and go to state 140

  ! ELSE            [ reduce using rule 69 (cond_instruction -> IF ( condition ) program_ins .) ]


state 131

    (71) condition -> operation comparison_operator operation .

    )               reduce using rule 71 (condition -> operation comparison_operator operation .)


state 132

    (78) while_instruction -> WHILE ( condition ) program_ins .

    PRINT           reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    {               reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    BREAK           reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    CONTINUE        reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    RETURN          reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    COMMENT         reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    IF              reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    WHILE           reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    FOR             reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    ID              reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    $end            reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    }               reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)
    ELSE            reduce using rule 78 (while_instruction -> WHILE ( condition ) program_ins .)


state 133

    (79) for_instruction -> FOR id = range program_ins .

    PRINT           reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    {               reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    BREAK           reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    CONTINUE        reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    RETURN          reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    COMMENT         reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    IF              reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    WHILE           reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    FOR             reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    ID              reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    $end            reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    }               reduce using rule 79 (for_instruction -> FOR id = range program_ins .)
    ELSE            reduce using rule 79 (for_instruction -> FOR id = range program_ins .)


state 134

    (80) range -> numeric_operation : . numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    numeric_operation              shift and go to state 141
    id                             shift and go to state 69

state 135

    (28) matrix_assign -> id [ multiple_index ] = . numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    id                             shift and go to state 69
    numeric_operation              shift and go to state 142

state 136

    (29) matrix_assign -> id [ multiple_index ] assign_operator . numeric_operation
    (36) numeric_operation -> . numeric_operation + numeric_operation
    (37) numeric_operation -> . numeric_operation - numeric_operation
    (38) numeric_operation -> . numeric_operation * numeric_operation
    (39) numeric_operation -> . numeric_operation / numeric_operation
    (40) numeric_operation -> . - numeric_operation
    (41) numeric_operation -> . ( numeric_operation )
    (42) numeric_operation -> . id
    (43) numeric_operation -> . INTNUM
    (44) numeric_operation -> . FLOATNUM
    (63) id -> . ID

    -               shift and go to state 28
    (               shift and go to state 68
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    ID              shift and go to state 19

    id                             shift and go to state 69
    numeric_operation              shift and go to state 143

state 137

    (30) matrix_assign -> id [ single_index ] = . vector
    (33) vector -> . [ vector_val ]

    [               shift and go to state 76

    vector                         shift and go to state 144

state 138

    (31) multiple_index -> INTNUM , INTNUM .

    ]               reduce using rule 31 (multiple_index -> INTNUM , INTNUM .)


state 139

    (34) vector_val -> numeric_operation , vector_val .

    ]               reduce using rule 34 (vector_val -> numeric_operation , vector_val .)


state 140

    (70) cond_instruction -> IF ( condition ) program_ins ELSE . program_ins
    (3) program_ins -> . PRINT value ;
    (4) program_ins -> . assign ;
    (5) program_ins -> . cond_instruction
    (6) program_ins -> . while_instruction
    (7) program_ins -> . for_instruction
    (8) program_ins -> . { program }
    (9) program_ins -> . BREAK ;
    (10) program_ins -> . CONTINUE ;
    (11) program_ins -> . RETURN operation ;
    (12) program_ins -> . COMMENT
    (15) assign -> . id_assign
    (16) assign -> . matrix_assign
    (69) cond_instruction -> . IF ( condition ) program_ins
    (70) cond_instruction -> . IF ( condition ) program_ins ELSE program_ins
    (78) while_instruction -> . WHILE ( condition ) program_ins
    (79) for_instruction -> . FOR id = range program_ins
    (17) id_assign -> . id = all_operations
    (18) id_assign -> . id assign_operator operation
    (28) matrix_assign -> . id [ multiple_index ] = numeric_operation
    (29) matrix_assign -> . id [ multiple_index ] assign_operator numeric_operation
    (30) matrix_assign -> . id [ single_index ] = vector
    (63) id -> . ID

    PRINT           shift and go to state 3
    {               shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 11
    COMMENT         shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    ID              shift and go to state 19

    program_ins                    shift and go to state 145
    assign                         shift and go to state 4
    cond_instruction               shift and go to state 5
    while_instruction              shift and go to state 6
    for_instruction                shift and go to state 7
    id_assign                      shift and go to state 13
    matrix_assign                  shift and go to state 14
    id                             shift and go to state 18

state 141

    (80) range -> numeric_operation : numeric_operation .
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    PRINT           reduce using rule 80 (range -> numeric_operation : numeric_operation .)
    {               reduce using rule 80 (range -> numeric_operation : numeric_operation .)
    BREAK           reduce using rule 80 (range -> numeric_operation : numeric_operation .)
    CONTINUE        reduce using rule 80 (range -> numeric_operation : numeric_operation .)
    RETURN          reduce using rule 80 (range -> numeric_operation : numeric_operation .)
    COMMENT         reduce using rule 80 (range -> numeric_operation : numeric_operation .)
    IF              reduce using rule 80 (range -> numeric_operation : numeric_operation .)
    WHILE           reduce using rule 80 (range -> numeric_operation : numeric_operation .)
    FOR             reduce using rule 80 (range -> numeric_operation : numeric_operation .)
    ID              reduce using rule 80 (range -> numeric_operation : numeric_operation .)
    +               shift and go to state 56
    -               shift and go to state 57
    *               shift and go to state 58
    /               shift and go to state 59


state 142

    (28) matrix_assign -> id [ multiple_index ] = numeric_operation .
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    ;               reduce using rule 28 (matrix_assign -> id [ multiple_index ] = numeric_operation .)
    +               shift and go to state 56
    -               shift and go to state 57
    *               shift and go to state 58
    /               shift and go to state 59


state 143

    (29) matrix_assign -> id [ multiple_index ] assign_operator numeric_operation .
    (36) numeric_operation -> numeric_operation . + numeric_operation
    (37) numeric_operation -> numeric_operation . - numeric_operation
    (38) numeric_operation -> numeric_operation . * numeric_operation
    (39) numeric_operation -> numeric_operation . / numeric_operation

    ;               reduce using rule 29 (matrix_assign -> id [ multiple_index ] assign_operator numeric_operation .)
    +               shift and go to state 56
    -               shift and go to state 57
    *               shift and go to state 58
    /               shift and go to state 59


state 144

    (30) matrix_assign -> id [ single_index ] = vector .

    ;               reduce using rule 30 (matrix_assign -> id [ single_index ] = vector .)


state 145

    (70) cond_instruction -> IF ( condition ) program_ins ELSE program_ins .

    PRINT           reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    {               reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    BREAK           reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    CONTINUE        reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    RETURN          reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    COMMENT         reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    IF              reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    WHILE           reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    FOR             reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    ID              reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    $end            reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    }               reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)
    ELSE            reduce using rule 70 (cond_instruction -> IF ( condition ) program_ins ELSE program_ins .)

