
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEleftMATRIX_ADDleftMATRIX_MULnonassoc\'left+-left*/ADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GT ID IF INTNUM LT MULASSIGN NEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : program_ins program\n                | program_insprogram_ins : PRINT value \';\'\n                | assign \';\'\n                | cond_instruction\n                | while_instruction\n                | for_instruction\n                | \'{\' program \'}\'\n                | BREAK \';\'\n                | CONTINUE \';\'\n                | RETURN operation \';\'\n                | COMMENTvalue : all_operations \',\' value\n            | all_operationsassign : id_assign\n                | matrix_assignid_assign : id \'=\' all_operations\n                | id assign_operator operationall_operations : operation\n                    | stringstring : STRINGassign_operator : ADDASSIGN\n                | SUBASSIGN\n                | MULASSIGN\n                | DIVASSIGNoperation : numeric_operation\n                | matrix_operationmatrix_assign : id \'[\' multiple_index \']\' \'=\' numeric_operation\n                    | id \'[\' multiple_index \']\' assign_operator numeric_operation\n                    | id \'[\' single_index \']\' \'=\' vectormultiple_index : INTNUM \',\' INTNUMsingle_index : INTNUMvector : \'[\' vector_val \']\'vector_val : numeric_operation \',\' vector_val\n                | numeric_operationnumeric_operation : numeric_operation \'+\' numeric_operation\n                            | numeric_operation \'-\' numeric_operation\n                            | numeric_operation \'*\' numeric_operation\n                            | numeric_operation \'/\' numeric_operation\n                            | \'-\' numeric_operation\n                            | \'(\' numeric_operation \')\'\n                            | id\n                            | INTNUM\n                            | FLOATNUMmatrix_operation : matrix_operation matrix_operator_mul matrix_operation %prec MATRIX_MUL\n                        | matrix_operation matrix_operator_add matrix_operation %prec MATRIX_ADD\n                        | matrix_operation "\'"\n                        | \'(\' matrix_operation \')\'\n                        | id_form\n                        | fid \'(\' numeric_operation \')\'\n                        | \'[\' matrix \']\'id_form : id "\'"\n                | id matrix_operator_mul matrix_operation %prec MATRIX_MUL\n                | matrix_operation matrix_operator_mul id %prec MATRIX_MUL\n                | id matrix_operator_mul id %prec MATRIX_MUL\n                | id matrix_operator_add matrix_operation %prec MATRIX_ADD\n                | matrix_operation matrix_operator_add id %prec MATRIX_ADD\n                | id matrix_operator_add id %prec MATRIX_ADDmatrix_operator_mul : DOTMUL\n        | DOTDIVmatrix_operator_add : DOTADD\n        | DOTSUBid : IDfid : ZEROS\n            | ONES\n            | EYEmatrix : vector \',\' matrix\n                | vectorcond_instruction : IF \'(\' condition \')\' program_ins %prec IFX\n                        | IF \'(\' condition \')\' program_ins ELSE program_inscondition : operation comparison_operator operationcomparison_operator : EQ\n                            | NEQ\n                            | LT\n                            | GT\n                            | \'<\'\n                            | \'>\'while_instruction : WHILE \'(\' condition \')\' program_insfor_instruction : FOR id \'=\' range program_insrange : numeric_operation \':\' numeric_operation'
    
_lr_action_items = {'PRINT':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,91,92,93,94,100,111,119,120,130,132,133,140,141,145,],[3,3,-5,-6,-7,3,-12,-63,-43,-44,-4,-9,-10,-3,-40,-42,-8,-11,-36,-37,-38,-39,-41,3,3,3,-69,-78,-79,3,-80,-70,]),'{':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,91,92,93,94,100,111,119,120,130,132,133,140,141,145,],[8,8,-5,-6,-7,8,-12,-63,-43,-44,-4,-9,-10,-3,-40,-42,-8,-11,-36,-37,-38,-39,-41,8,8,8,-69,-78,-79,8,-80,-70,]),'BREAK':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,91,92,93,94,100,111,119,120,130,132,133,140,141,145,],[9,9,-5,-6,-7,9,-12,-63,-43,-44,-4,-9,-10,-3,-40,-42,-8,-11,-36,-37,-38,-39,-41,9,9,9,-69,-78,-79,9,-80,-70,]),'CONTINUE':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,91,92,93,94,100,111,119,120,130,132,133,140,141,145,],[10,10,-5,-6,-7,10,-12,-63,-43,-44,-4,-9,-10,-3,-40,-42,-8,-11,-36,-37,-38,-39,-41,10,10,10,-69,-78,-79,10,-80,-70,]),'RETURN':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,91,92,93,94,100,111,119,120,130,132,133,140,141,145,],[11,11,-5,-6,-7,11,-12,-63,-43,-44,-4,-9,-10,-3,-40,-42,-8,-11,-36,-37,-38,-39,-41,11,11,11,-69,-78,-79,11,-80,-70,]),'COMMENT':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,91,92,93,94,100,111,119,120,130,132,133,140,141,145,],[12,12,-5,-6,-7,12,-12,-63,-43,-44,-4,-9,-10,-3,-40,-42,-8,-11,-36,-37,-38,-39,-41,12,12,12,-69,-78,-79,12,-80,-70,]),'IF':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,91,92,93,94,100,111,119,120,130,132,133,140,141,145,],[15,15,-5,-6,-7,15,-12,-63,-43,-44,-4,-9,-10,-3,-40,-42,-8,-11,-36,-37,-38,-39,-41,15,15,15,-69,-78,-79,15,-80,-70,]),'WHILE':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,91,92,93,94,100,111,119,120,130,132,133,140,141,145,],[16,16,-5,-6,-7,16,-12,-63,-43,-44,-4,-9,-10,-3,-40,-42,-8,-11,-36,-37,-38,-39,-41,16,16,16,-69,-78,-79,16,-80,-70,]),'FOR':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,91,92,93,94,100,111,119,120,130,132,133,140,141,145,],[17,17,-5,-6,-7,17,-12,-63,-43,-44,-4,-9,-10,-3,-40,-42,-8,-11,-36,-37,-38,-39,-41,17,17,17,-69,-78,-79,17,-80,-70,]),'ID':([0,2,3,5,6,7,8,11,12,17,19,28,29,31,32,39,41,42,44,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,73,74,75,76,79,80,84,91,92,93,94,97,100,111,112,113,114,115,116,117,118,119,120,128,130,132,133,134,135,136,140,141,145,],[19,19,19,-5,-6,-7,19,19,-12,19,-63,19,19,-43,-44,-4,-9,-10,19,19,19,19,-22,-23,-24,-25,-3,19,19,19,19,19,19,19,-59,-60,-61,-62,-40,19,-42,19,19,19,19,-8,-11,19,-36,-37,-38,-39,19,-41,19,19,-72,-73,-74,-75,-76,-77,19,19,19,-69,-78,-79,19,19,19,19,-80,-70,]),'$end':([1,2,5,6,7,12,20,39,41,42,54,79,80,130,132,133,145,],[0,-2,-5,-6,-7,-12,-1,-4,-9,-10,-3,-8,-11,-69,-78,-79,-70,]),'}':([2,5,6,7,12,20,39,40,41,42,54,79,80,130,132,133,145,],[-2,-5,-6,-7,-12,-1,-4,79,-9,-10,-3,-8,-11,-69,-78,-79,-70,]),'STRING':([3,47,55,],[27,27,27,]),'-':([3,11,19,25,28,29,30,31,32,44,45,47,48,50,51,52,53,55,56,57,58,59,67,68,69,70,75,76,84,91,92,93,94,100,106,108,112,113,114,115,116,117,118,121,128,134,135,136,141,142,143,],[28,28,-63,57,28,28,-42,-43,-44,28,28,28,28,-22,-23,-24,-25,28,28,28,28,28,-40,28,-42,57,28,28,28,-36,-37,-38,-39,-41,57,57,28,-72,-73,-74,-75,-76,-77,57,28,28,28,28,57,57,57,]),'(':([3,11,15,16,28,29,34,36,37,38,44,45,47,48,50,51,52,53,55,56,57,58,59,60,61,63,64,65,66,68,73,74,75,76,84,97,112,113,114,115,116,117,118,128,134,135,136,],[29,29,44,45,68,29,75,-64,-65,-66,29,29,29,29,-22,-23,-24,-25,29,68,68,68,68,97,97,-59,-60,-61,-62,68,97,97,68,68,68,97,29,-72,-73,-74,-75,-76,-77,68,68,68,68,]),'INTNUM':([3,11,28,29,44,45,47,48,49,50,51,52,53,55,56,57,58,59,68,75,76,84,112,113,114,115,116,117,118,124,128,134,135,136,],[31,31,31,31,31,31,31,31,89,-22,-23,-24,-25,31,31,31,31,31,31,31,31,31,31,-72,-73,-74,-75,-76,-77,138,31,31,31,31,]),'FLOATNUM':([3,11,28,29,44,45,47,48,50,51,52,53,55,56,57,58,59,68,75,76,84,112,113,114,115,116,117,118,128,134,135,136,],[32,32,32,32,32,32,32,32,-22,-23,-24,-25,32,32,32,32,32,32,32,32,32,32,-72,-73,-74,-75,-76,-77,32,32,32,32,]),'[':([3,11,18,19,29,35,44,45,47,48,50,51,52,53,55,60,61,63,64,65,66,73,74,97,110,112,113,114,115,116,117,118,137,],[35,35,49,-63,35,76,35,35,35,35,-22,-23,-24,-25,35,35,35,-59,-60,-61,-62,35,35,35,76,35,-72,-73,-74,-75,-76,-77,76,]),'ZEROS':([3,11,29,44,45,47,48,50,51,52,53,55,60,61,63,64,65,66,73,74,97,112,113,114,115,116,117,118,],[36,36,36,36,36,36,36,-22,-23,-24,-25,36,36,36,-59,-60,-61,-62,36,36,36,36,-72,-73,-74,-75,-76,-77,]),'ONES':([3,11,29,44,45,47,48,50,51,52,53,55,60,61,63,64,65,66,73,74,97,112,113,114,115,116,117,118,],[37,37,37,37,37,37,37,-22,-23,-24,-25,37,37,37,-59,-60,-61,-62,37,37,37,37,-72,-73,-74,-75,-76,-77,]),'EYE':([3,11,29,44,45,47,48,50,51,52,53,55,60,61,63,64,65,66,73,74,97,112,113,114,115,116,117,118,],[38,38,38,38,38,38,38,-22,-23,-24,-25,38,38,38,-59,-60,-61,-62,38,38,38,38,-72,-73,-74,-75,-76,-77,]),';':([4,9,10,13,14,19,21,22,23,24,25,26,27,30,31,32,33,43,62,67,69,72,85,86,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,109,126,127,142,143,144,],[39,41,42,-15,-16,-63,54,-14,-19,-20,-26,-27,-21,-42,-43,-44,-49,80,-47,-40,-42,-52,-17,-18,-13,-36,-37,-38,-39,-45,-54,-46,-57,-41,-48,-55,-53,-58,-56,-51,-50,-33,-28,-29,-30,]),'ELSE':([5,6,7,12,39,41,42,54,79,80,130,132,133,145,],[-5,-6,-7,-12,-4,-9,-10,-3,-8,-11,140,-78,-79,-70,]),'=':([18,19,46,122,123,],[47,-63,84,135,137,]),'ADDASSIGN':([18,19,122,],[50,-63,50,]),'SUBASSIGN':([18,19,122,],[51,-63,51,]),'MULASSIGN':([18,19,122,],[52,-63,52,]),'DIVASSIGN':([18,19,122,],[53,-63,53,]),"'":([19,26,30,33,62,71,72,95,96,98,99,101,102,103,104,105,109,125,126,],[-63,62,72,-49,-47,62,-52,62,72,62,72,-48,72,62,72,62,-51,72,-50,]),'DOTMUL':([19,26,30,33,62,71,72,95,96,98,99,101,102,103,104,105,109,125,126,],[-63,63,63,-49,-47,63,-52,-45,-54,-46,-57,-48,-55,-53,-58,-56,-51,63,-50,]),'DOTDIV':([19,26,30,33,62,71,72,95,96,98,99,101,102,103,104,105,109,125,126,],[-63,64,64,-49,-47,64,-52,-45,-54,-46,-57,-48,-55,-53,-58,-56,-51,64,-50,]),'DOTADD':([19,26,30,33,62,71,72,95,96,98,99,101,102,103,104,105,109,125,126,],[-63,65,65,-49,-47,65,-52,-45,-54,-46,-57,-48,-55,-53,-58,-56,-51,65,-50,]),'DOTSUB':([19,26,30,33,62,71,72,95,96,98,99,101,102,103,104,105,109,125,126,],[-63,66,66,-49,-47,66,-52,-45,-54,-46,-57,-48,-55,-53,-58,-56,-51,66,-50,]),'+':([19,25,30,31,32,67,69,70,91,92,93,94,100,106,108,121,141,142,143,],[-63,56,-42,-43,-44,-40,-42,56,-36,-37,-38,-39,-41,56,56,56,56,56,56,]),'*':([19,25,30,31,32,67,69,70,91,92,93,94,100,106,108,121,141,142,143,],[-63,58,-42,-43,-44,58,-42,58,58,58,-38,-39,-41,58,58,58,58,58,58,]),'/':([19,25,30,31,32,67,69,70,91,92,93,94,100,106,108,121,141,142,143,],[-63,59,-42,-43,-44,59,-42,59,59,59,-38,-39,-41,59,59,59,59,59,59,]),',':([19,22,23,24,25,26,27,30,31,32,33,62,67,69,72,78,89,91,92,93,94,95,96,98,99,100,101,102,103,104,105,108,109,126,127,],[-63,55,-19,-20,-26,-27,-21,-42,-43,-44,-49,-47,-40,-42,-52,110,124,-36,-37,-38,-39,-45,-54,-46,-57,-41,-48,-55,-53,-58,-56,128,-51,-50,-33,]),')':([19,25,26,30,31,32,33,62,67,69,70,71,72,81,83,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,109,126,131,],[-63,-26,-27,-42,-43,-44,-49,-47,-40,-42,100,101,-52,111,119,-36,-37,-38,-39,-45,-54,-46,-57,-41,-48,-55,-53,-58,-56,126,-51,-50,-71,]),'EQ':([19,25,26,30,31,32,33,62,67,69,72,82,91,92,93,94,95,96,98,99,100,101,102,103,104,105,109,126,],[-63,-26,-27,-42,-43,-44,-49,-47,-40,-42,-52,113,-36,-37,-38,-39,-45,-54,-46,-57,-41,-48,-55,-53,-58,-56,-51,-50,]),'NEQ':([19,25,26,30,31,32,33,62,67,69,72,82,91,92,93,94,95,96,98,99,100,101,102,103,104,105,109,126,],[-63,-26,-27,-42,-43,-44,-49,-47,-40,-42,-52,114,-36,-37,-38,-39,-45,-54,-46,-57,-41,-48,-55,-53,-58,-56,-51,-50,]),'LT':([19,25,26,30,31,32,33,62,67,69,72,82,91,92,93,94,95,96,98,99,100,101,102,103,104,105,109,126,],[-63,-26,-27,-42,-43,-44,-49,-47,-40,-42,-52,115,-36,-37,-38,-39,-45,-54,-46,-57,-41,-48,-55,-53,-58,-56,-51,-50,]),'GT':([19,25,26,30,31,32,33,62,67,69,72,82,91,92,93,94,95,96,98,99,100,101,102,103,104,105,109,126,],[-63,-26,-27,-42,-43,-44,-49,-47,-40,-42,-52,116,-36,-37,-38,-39,-45,-54,-46,-57,-41,-48,-55,-53,-58,-56,-51,-50,]),'<':([19,25,26,30,31,32,33,62,67,69,72,82,91,92,93,94,95,96,98,99,100,101,102,103,104,105,109,126,],[-63,-26,-27,-42,-43,-44,-49,-47,-40,-42,-52,117,-36,-37,-38,-39,-45,-54,-46,-57,-41,-48,-55,-53,-58,-56,-51,-50,]),'>':([19,25,26,30,31,32,33,62,67,69,72,82,91,92,93,94,95,96,98,99,100,101,102,103,104,105,109,126,],[-63,-26,-27,-42,-43,-44,-49,-47,-40,-42,-52,118,-36,-37,-38,-39,-45,-54,-46,-57,-41,-48,-55,-53,-58,-56,-51,-50,]),']':([19,31,32,67,69,77,78,87,88,89,91,92,93,94,100,107,108,127,129,138,139,],[-63,-43,-44,-40,-42,109,-68,122,123,-32,-36,-37,-38,-39,-41,127,-35,-33,-67,-31,-34,]),':':([19,31,32,67,69,91,92,93,94,100,121,],[-63,-43,-44,-40,-42,-36,-37,-38,-39,-41,134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,8,],[1,20,40,]),'program_ins':([0,2,8,111,119,120,140,],[2,2,2,130,132,133,145,]),'assign':([0,2,8,111,119,120,140,],[4,4,4,4,4,4,4,]),'cond_instruction':([0,2,8,111,119,120,140,],[5,5,5,5,5,5,5,]),'while_instruction':([0,2,8,111,119,120,140,],[6,6,6,6,6,6,6,]),'for_instruction':([0,2,8,111,119,120,140,],[7,7,7,7,7,7,7,]),'id_assign':([0,2,8,111,119,120,140,],[13,13,13,13,13,13,13,]),'matrix_assign':([0,2,8,111,119,120,140,],[14,14,14,14,14,14,14,]),'id':([0,2,3,8,11,17,28,29,44,45,47,48,55,56,57,58,59,60,61,68,73,74,75,76,84,97,111,112,119,120,128,134,135,136,140,],[18,18,30,18,30,46,69,30,30,30,30,30,30,69,69,69,69,96,99,69,102,104,69,69,69,125,18,30,18,18,69,69,69,69,18,]),'value':([3,55,],[21,90,]),'all_operations':([3,47,55,],[22,85,22,]),'operation':([3,11,44,45,47,48,55,112,],[23,43,82,82,23,86,23,131,]),'string':([3,47,55,],[24,24,24,]),'numeric_operation':([3,11,28,29,44,45,47,48,55,56,57,58,59,68,75,76,84,112,128,134,135,136,],[25,25,67,70,25,25,25,25,25,91,92,93,94,70,106,108,121,25,108,141,142,143,]),'matrix_operation':([3,11,29,44,45,47,48,55,60,61,73,74,97,112,],[26,26,71,26,26,26,26,26,95,98,103,105,71,26,]),'id_form':([3,11,29,44,45,47,48,55,60,61,73,74,97,112,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'fid':([3,11,29,44,45,47,48,55,60,61,73,74,97,112,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'assign_operator':([18,122,],[48,136,]),'matrix_operator_mul':([26,30,71,95,96,98,99,102,103,104,105,125,],[60,73,60,60,73,60,73,73,60,73,60,73,]),'matrix_operator_add':([26,30,71,95,96,98,99,102,103,104,105,125,],[61,74,61,61,74,61,74,74,61,74,61,74,]),'matrix':([35,110,],[77,129,]),'vector':([35,110,137,],[78,78,144,]),'condition':([44,45,],[81,83,]),'multiple_index':([49,],[87,]),'single_index':([49,],[88,]),'vector_val':([76,128,],[107,139,]),'comparison_operator':([82,],[112,]),'range':([84,],[120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_ins program','program',2,'p_program','Mparser.py',29),
  ('program -> program_ins','program',1,'p_program','Mparser.py',30),
  ('program_ins -> PRINT value ;','program_ins',3,'p_program_instrucitons','Mparser.py',35),
  ('program_ins -> assign ;','program_ins',2,'p_program_instrucitons','Mparser.py',36),
  ('program_ins -> cond_instruction','program_ins',1,'p_program_instrucitons','Mparser.py',37),
  ('program_ins -> while_instruction','program_ins',1,'p_program_instrucitons','Mparser.py',38),
  ('program_ins -> for_instruction','program_ins',1,'p_program_instrucitons','Mparser.py',39),
  ('program_ins -> { program }','program_ins',3,'p_program_instrucitons','Mparser.py',40),
  ('program_ins -> BREAK ;','program_ins',2,'p_program_instrucitons','Mparser.py',41),
  ('program_ins -> CONTINUE ;','program_ins',2,'p_program_instrucitons','Mparser.py',42),
  ('program_ins -> RETURN operation ;','program_ins',3,'p_program_instrucitons','Mparser.py',43),
  ('program_ins -> COMMENT','program_ins',1,'p_program_instrucitons','Mparser.py',44),
  ('value -> all_operations , value','value',3,'p_value','Mparser.py',52),
  ('value -> all_operations','value',1,'p_value','Mparser.py',53),
  ('assign -> id_assign','assign',1,'p_assign','Mparser.py',58),
  ('assign -> matrix_assign','assign',1,'p_assign','Mparser.py',59),
  ('id_assign -> id = all_operations','id_assign',3,'p_id_assign','Mparser.py',64),
  ('id_assign -> id assign_operator operation','id_assign',3,'p_id_assign','Mparser.py',65),
  ('all_operations -> operation','all_operations',1,'p_all_operations','Mparser.py',69),
  ('all_operations -> string','all_operations',1,'p_all_operations','Mparser.py',70),
  ('string -> STRING','string',1,'p_string','Mparser.py',74),
  ('assign_operator -> ADDASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',78),
  ('assign_operator -> SUBASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',79),
  ('assign_operator -> MULASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',80),
  ('assign_operator -> DIVASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',81),
  ('operation -> numeric_operation','operation',1,'p_operation','Mparser.py',84),
  ('operation -> matrix_operation','operation',1,'p_operation','Mparser.py',85),
  ('matrix_assign -> id [ multiple_index ] = numeric_operation','matrix_assign',6,'p_matrix_assign','Mparser.py',89),
  ('matrix_assign -> id [ multiple_index ] assign_operator numeric_operation','matrix_assign',6,'p_matrix_assign','Mparser.py',90),
  ('matrix_assign -> id [ single_index ] = vector','matrix_assign',6,'p_matrix_assign','Mparser.py',91),
  ('multiple_index -> INTNUM , INTNUM','multiple_index',3,'p_multiple_index','Mparser.py',95),
  ('single_index -> INTNUM','single_index',1,'p_single_index','Mparser.py',99),
  ('vector -> [ vector_val ]','vector',3,'p_vector','Mparser.py',103),
  ('vector_val -> numeric_operation , vector_val','vector_val',3,'p_vector_val','Mparser.py',107),
  ('vector_val -> numeric_operation','vector_val',1,'p_vector_val','Mparser.py',108),
  ('numeric_operation -> numeric_operation + numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',113),
  ('numeric_operation -> numeric_operation - numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',114),
  ('numeric_operation -> numeric_operation * numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',115),
  ('numeric_operation -> numeric_operation / numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',116),
  ('numeric_operation -> - numeric_operation','numeric_operation',2,'p_numeric_operations','Mparser.py',117),
  ('numeric_operation -> ( numeric_operation )','numeric_operation',3,'p_numeric_operations','Mparser.py',118),
  ('numeric_operation -> id','numeric_operation',1,'p_numeric_operations','Mparser.py',119),
  ('numeric_operation -> INTNUM','numeric_operation',1,'p_numeric_operations','Mparser.py',120),
  ('numeric_operation -> FLOATNUM','numeric_operation',1,'p_numeric_operations','Mparser.py',121),
  ('matrix_operation -> matrix_operation matrix_operator_mul matrix_operation','matrix_operation',3,'p_matrix_operation','Mparser.py',130),
  ('matrix_operation -> matrix_operation matrix_operator_add matrix_operation','matrix_operation',3,'p_matrix_operation','Mparser.py',131),
  ("matrix_operation -> matrix_operation '",'matrix_operation',2,'p_matrix_operation','Mparser.py',132),
  ('matrix_operation -> ( matrix_operation )','matrix_operation',3,'p_matrix_operation','Mparser.py',133),
  ('matrix_operation -> id_form','matrix_operation',1,'p_matrix_operation','Mparser.py',134),
  ('matrix_operation -> fid ( numeric_operation )','matrix_operation',4,'p_matrix_operation','Mparser.py',135),
  ('matrix_operation -> [ matrix ]','matrix_operation',3,'p_matrix_operation','Mparser.py',136),
  ("id_form -> id '",'id_form',2,'p_id_form','Mparser.py',149),
  ('id_form -> id matrix_operator_mul matrix_operation','id_form',3,'p_id_form','Mparser.py',150),
  ('id_form -> matrix_operation matrix_operator_mul id','id_form',3,'p_id_form','Mparser.py',151),
  ('id_form -> id matrix_operator_mul id','id_form',3,'p_id_form','Mparser.py',152),
  ('id_form -> id matrix_operator_add matrix_operation','id_form',3,'p_id_form','Mparser.py',153),
  ('id_form -> matrix_operation matrix_operator_add id','id_form',3,'p_id_form','Mparser.py',154),
  ('id_form -> id matrix_operator_add id','id_form',3,'p_id_form','Mparser.py',155),
  ('matrix_operator_mul -> DOTMUL','matrix_operator_mul',1,'p_matrix_mul','Mparser.py',161),
  ('matrix_operator_mul -> DOTDIV','matrix_operator_mul',1,'p_matrix_mul','Mparser.py',162),
  ('matrix_operator_add -> DOTADD','matrix_operator_add',1,'p_matrix_add','Mparser.py',166),
  ('matrix_operator_add -> DOTSUB','matrix_operator_add',1,'p_matrix_add','Mparser.py',167),
  ('id -> ID','id',1,'p_id','Mparser.py',171),
  ('fid -> ZEROS','fid',1,'p_fid','Mparser.py',175),
  ('fid -> ONES','fid',1,'p_fid','Mparser.py',176),
  ('fid -> EYE','fid',1,'p_fid','Mparser.py',177),
  ('matrix -> vector , matrix','matrix',3,'p_matrix','Mparser.py',181),
  ('matrix -> vector','matrix',1,'p_matrix','Mparser.py',182),
  ('cond_instruction -> IF ( condition ) program_ins','cond_instruction',5,'p_cond_instruction','Mparser.py',188),
  ('cond_instruction -> IF ( condition ) program_ins ELSE program_ins','cond_instruction',7,'p_cond_instruction','Mparser.py',189),
  ('condition -> operation comparison_operator operation','condition',3,'p_condition','Mparser.py',194),
  ('comparison_operator -> EQ','comparison_operator',1,'p_comparison_operators','Mparser.py',198),
  ('comparison_operator -> NEQ','comparison_operator',1,'p_comparison_operators','Mparser.py',199),
  ('comparison_operator -> LT','comparison_operator',1,'p_comparison_operators','Mparser.py',200),
  ('comparison_operator -> GT','comparison_operator',1,'p_comparison_operators','Mparser.py',201),
  ('comparison_operator -> <','comparison_operator',1,'p_comparison_operators','Mparser.py',202),
  ('comparison_operator -> >','comparison_operator',1,'p_comparison_operators','Mparser.py',203),
  ('while_instruction -> WHILE ( condition ) program_ins','while_instruction',5,'p_while_instruction','Mparser.py',207),
  ('for_instruction -> FOR id = range program_ins','for_instruction',5,'p_for_instruction','Mparser.py',211),
  ('range -> numeric_operation : numeric_operation','range',3,'p_range','Mparser.py',215),
]
