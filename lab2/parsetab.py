
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEleftMATRIX_ADDleftMATRIX_MULnonassoc\'left+-left*/ADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GT ID IF INTNUM LT MULASSIGN NEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : program_ins program\n                | program_insprogram_ins : PRINT value \';\'\n                | assign \';\'\n                | cond_instruction\n                | while_instruction\n                | for_instruction\n                | \'{\' program \'}\'\n                | BREAK \';\'\n                | CONTINUE \';\'\n                | RETURN operation \';\'\n                | COMMENTvalue : all_operations \',\' value\n            | all_operationsassign : id_assign\n                | matrix_assignid_assign : id \'=\' all_operations\n                | id \'=\' vector\n                | id assign_operator operationall_operations : operation\n                    | stringstring : STRINGassign_operator : ADDASSIGN\n                | SUBASSIGN\n                | MULASSIGN\n                | DIVASSIGNoperation : numeric_operation\n                | matrix_operationmatrix_assign : id \'[\' multiple_index \']\' \'=\' numeric_operation\n                    | id \'[\' multiple_index \']\' assign_operator numeric_operation\n                    | id \'[\' single_index \']\' \'=\' vector\n                    | id \'[\' single_index \']\' \'=\' numeric_operation\n                    | id \'[\' single_index \']\' assign_operator numeric_operationmultiple_index : INTNUM \',\' INTNUMsingle_index : INTNUMvector : \'[\' vector_val \']\'vector_val : numeric_operation \',\' vector_val\n                | numeric_operationnumeric_operation : numeric_operation \'+\' numeric_operation\n                            | numeric_operation \'-\' numeric_operation\n                            | numeric_operation \'*\' numeric_operation\n                            | numeric_operation \'/\' numeric_operation\n                            | \'-\' numeric_operation\n                            | \'(\' numeric_operation \')\'\n                            | id\n                            | INTNUM\n                            | FLOATNUMmatrix_operation : matrix_operation matrix_operator_mul matrix_operation %prec MATRIX_MUL\n                        | matrix_operation matrix_operator_add matrix_operation %prec MATRIX_ADD\n                        | matrix_operation "\'"\n                        | \'(\' matrix_operation \')\'\n                        | id_form\n                        | fid \'(\' numeric_operation \')\'\n                        | \'[\' matrix \']\'id_form : id "\'"\n                | id matrix_operator_mul matrix_operation %prec MATRIX_MUL\n                | matrix_operation matrix_operator_mul id %prec MATRIX_MUL\n                | id matrix_operator_mul id %prec MATRIX_MUL\n                | id matrix_operator_add matrix_operation %prec MATRIX_ADD\n                | matrix_operation matrix_operator_add id %prec MATRIX_ADD\n                | id matrix_operator_add id %prec MATRIX_ADDmatrix_operator_mul : DOTMUL\n        | DOTDIVmatrix_operator_add : DOTADD\n        | DOTSUBid : IDfid : ZEROS\n            | ONES\n            | EYEmatrix : vector \',\' matrix\n                | vectorcond_instruction : IF \'(\' condition \')\' program_ins %prec IFX\n                        | IF \'(\' condition \')\' program_ins ELSE program_inscondition : operation comparison_operator operationcomparison_operator : EQ\n                            | NEQ\n                            | LT\n                            | GT\n                            | \'<\'\n                            | \'>\'while_instruction : WHILE \'(\' condition \')\' program_insfor_instruction : FOR id \'=\' range program_insrange : numeric_operation \':\' numeric_operation'
    
_lr_action_items = {'PRINT':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,93,94,95,96,102,113,121,122,132,134,135,143,144,150,],[3,3,-5,-6,-7,3,-12,-66,-46,-47,-4,-9,-10,-3,-43,-45,-8,-11,-39,-40,-41,-42,-44,3,3,3,-72,-81,-82,3,-83,-73,]),'{':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,93,94,95,96,102,113,121,122,132,134,135,143,144,150,],[8,8,-5,-6,-7,8,-12,-66,-46,-47,-4,-9,-10,-3,-43,-45,-8,-11,-39,-40,-41,-42,-44,8,8,8,-72,-81,-82,8,-83,-73,]),'BREAK':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,93,94,95,96,102,113,121,122,132,134,135,143,144,150,],[9,9,-5,-6,-7,9,-12,-66,-46,-47,-4,-9,-10,-3,-43,-45,-8,-11,-39,-40,-41,-42,-44,9,9,9,-72,-81,-82,9,-83,-73,]),'CONTINUE':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,93,94,95,96,102,113,121,122,132,134,135,143,144,150,],[10,10,-5,-6,-7,10,-12,-66,-46,-47,-4,-9,-10,-3,-43,-45,-8,-11,-39,-40,-41,-42,-44,10,10,10,-72,-81,-82,10,-83,-73,]),'RETURN':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,93,94,95,96,102,113,121,122,132,134,135,143,144,150,],[11,11,-5,-6,-7,11,-12,-66,-46,-47,-4,-9,-10,-3,-43,-45,-8,-11,-39,-40,-41,-42,-44,11,11,11,-72,-81,-82,11,-83,-73,]),'COMMENT':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,93,94,95,96,102,113,121,122,132,134,135,143,144,150,],[12,12,-5,-6,-7,12,-12,-66,-46,-47,-4,-9,-10,-3,-43,-45,-8,-11,-39,-40,-41,-42,-44,12,12,12,-72,-81,-82,12,-83,-73,]),'IF':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,93,94,95,96,102,113,121,122,132,134,135,143,144,150,],[15,15,-5,-6,-7,15,-12,-66,-46,-47,-4,-9,-10,-3,-43,-45,-8,-11,-39,-40,-41,-42,-44,15,15,15,-72,-81,-82,15,-83,-73,]),'WHILE':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,93,94,95,96,102,113,121,122,132,134,135,143,144,150,],[16,16,-5,-6,-7,16,-12,-66,-46,-47,-4,-9,-10,-3,-43,-45,-8,-11,-39,-40,-41,-42,-44,16,16,16,-72,-81,-82,16,-83,-73,]),'FOR':([0,2,5,6,7,8,12,19,31,32,39,41,42,54,67,69,79,80,93,94,95,96,102,113,121,122,132,134,135,143,144,150,],[17,17,-5,-6,-7,17,-12,-66,-46,-47,-4,-9,-10,-3,-43,-45,-8,-11,-39,-40,-41,-42,-44,17,17,17,-72,-81,-82,17,-83,-73,]),'ID':([0,2,3,5,6,7,8,11,12,17,19,28,29,31,32,39,41,42,44,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,73,74,75,76,79,80,84,87,93,94,95,96,99,102,113,114,115,116,117,118,119,120,121,122,130,132,134,135,136,137,138,139,140,143,144,150,],[19,19,19,-5,-6,-7,19,19,-12,19,-66,19,19,-46,-47,-4,-9,-10,19,19,19,19,-23,-24,-25,-26,-3,19,19,19,19,19,19,19,-62,-63,-64,-65,-43,19,-45,19,19,19,19,-8,-11,19,19,-39,-40,-41,-42,19,-44,19,19,-75,-76,-77,-78,-79,-80,19,19,19,-72,-81,-82,19,19,19,19,19,19,-83,-73,]),'$end':([1,2,5,6,7,12,20,39,41,42,54,79,80,132,134,135,150,],[0,-2,-5,-6,-7,-12,-1,-4,-9,-10,-3,-8,-11,-72,-81,-82,-73,]),'}':([2,5,6,7,12,20,39,40,41,42,54,79,80,132,134,135,150,],[-2,-5,-6,-7,-12,-1,-4,79,-9,-10,-3,-8,-11,-72,-81,-82,-73,]),'STRING':([3,47,55,],[27,27,27,]),'-':([3,11,19,25,28,29,30,31,32,44,45,47,48,50,51,52,53,55,56,57,58,59,67,68,69,70,75,76,84,87,93,94,95,96,102,108,110,114,115,116,117,118,119,120,123,130,136,137,138,139,140,144,145,146,148,149,],[28,28,-66,57,28,28,-45,-46,-47,28,28,28,28,-23,-24,-25,-26,28,28,28,28,28,-43,28,-45,57,28,28,28,28,-39,-40,-41,-42,-44,57,57,28,-75,-76,-77,-78,-79,-80,57,28,28,28,28,28,28,57,57,57,57,57,]),'(':([3,11,15,16,28,29,34,36,37,38,44,45,47,48,50,51,52,53,55,56,57,58,59,60,61,63,64,65,66,68,73,74,75,76,84,87,99,114,115,116,117,118,119,120,130,136,137,138,139,140,],[29,29,44,45,68,29,75,-67,-68,-69,29,29,29,29,-23,-24,-25,-26,29,68,68,68,68,99,99,-62,-63,-64,-65,68,99,99,68,68,68,68,99,29,-75,-76,-77,-78,-79,-80,68,68,68,68,68,68,]),'INTNUM':([3,11,28,29,44,45,47,48,49,50,51,52,53,55,56,57,58,59,68,75,76,84,87,114,115,116,117,118,119,120,126,130,136,137,138,139,140,],[31,31,31,31,31,31,31,31,91,-23,-24,-25,-26,31,31,31,31,31,31,31,31,31,31,31,-75,-76,-77,-78,-79,-80,141,31,31,31,31,31,31,]),'FLOATNUM':([3,11,28,29,44,45,47,48,50,51,52,53,55,56,57,58,59,68,75,76,84,87,114,115,116,117,118,119,120,130,136,137,138,139,140,],[32,32,32,32,32,32,32,32,-23,-24,-25,-26,32,32,32,32,32,32,32,32,32,32,32,-75,-76,-77,-78,-79,-80,32,32,32,32,32,32,]),'[':([3,11,18,19,29,35,44,45,47,48,50,51,52,53,55,60,61,63,64,65,66,73,74,87,99,112,114,115,116,117,118,119,120,139,],[35,35,49,-66,35,76,35,35,87,35,-23,-24,-25,-26,35,35,35,-62,-63,-64,-65,35,35,76,35,76,35,-75,-76,-77,-78,-79,-80,76,]),'ZEROS':([3,11,29,44,45,47,48,50,51,52,53,55,60,61,63,64,65,66,73,74,99,114,115,116,117,118,119,120,],[36,36,36,36,36,36,36,-23,-24,-25,-26,36,36,36,-62,-63,-64,-65,36,36,36,36,-75,-76,-77,-78,-79,-80,]),'ONES':([3,11,29,44,45,47,48,50,51,52,53,55,60,61,63,64,65,66,73,74,99,114,115,116,117,118,119,120,],[37,37,37,37,37,37,37,-23,-24,-25,-26,37,37,37,-62,-63,-64,-65,37,37,37,37,-75,-76,-77,-78,-79,-80,]),'EYE':([3,11,29,44,45,47,48,50,51,52,53,55,60,61,63,64,65,66,73,74,99,114,115,116,117,118,119,120,],[38,38,38,38,38,38,38,-23,-24,-25,-26,38,38,38,-62,-63,-64,-65,38,38,38,38,-75,-76,-77,-78,-79,-80,]),';':([4,9,10,13,14,19,21,22,23,24,25,26,27,30,31,32,33,43,62,67,69,72,85,86,88,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,111,128,129,145,146,147,148,149,],[39,41,42,-15,-16,-66,54,-14,-20,-21,-27,-28,-22,-45,-46,-47,-52,80,-50,-43,-45,-55,-17,-18,-19,-13,-39,-40,-41,-42,-48,-57,-49,-60,-44,-51,-58,-56,-61,-59,-54,-53,-36,-29,-30,-31,-32,-33,]),'ELSE':([5,6,7,12,39,41,42,54,79,80,132,134,135,150,],[-5,-6,-7,-12,-4,-9,-10,-3,-8,-11,143,-81,-82,-73,]),'=':([18,19,46,124,125,],[47,-66,84,137,139,]),'ADDASSIGN':([18,19,124,125,],[50,-66,50,50,]),'SUBASSIGN':([18,19,124,125,],[51,-66,51,51,]),'MULASSIGN':([18,19,124,125,],[52,-66,52,52,]),'DIVASSIGN':([18,19,124,125,],[53,-66,53,53,]),"'":([19,26,30,33,62,71,72,97,98,100,101,103,104,105,106,107,111,127,128,],[-66,62,72,-52,-50,62,-55,62,72,62,72,-51,72,62,72,62,-54,72,-53,]),'DOTMUL':([19,26,30,33,62,71,72,97,98,100,101,103,104,105,106,107,111,127,128,],[-66,63,63,-52,-50,63,-55,-48,-57,-49,-60,-51,-58,-56,-61,-59,-54,63,-53,]),'DOTDIV':([19,26,30,33,62,71,72,97,98,100,101,103,104,105,106,107,111,127,128,],[-66,64,64,-52,-50,64,-55,-48,-57,-49,-60,-51,-58,-56,-61,-59,-54,64,-53,]),'DOTADD':([19,26,30,33,62,71,72,97,98,100,101,103,104,105,106,107,111,127,128,],[-66,65,65,-52,-50,65,-55,-48,-57,-49,-60,-51,-58,-56,-61,-59,-54,65,-53,]),'DOTSUB':([19,26,30,33,62,71,72,97,98,100,101,103,104,105,106,107,111,127,128,],[-66,66,66,-52,-50,66,-55,-48,-57,-49,-60,-51,-58,-56,-61,-59,-54,66,-53,]),'+':([19,25,30,31,32,67,69,70,93,94,95,96,102,108,110,123,144,145,146,148,149,],[-66,56,-45,-46,-47,-43,-45,56,-39,-40,-41,-42,-44,56,56,56,56,56,56,56,56,]),'*':([19,25,30,31,32,67,69,70,93,94,95,96,102,108,110,123,144,145,146,148,149,],[-66,58,-45,-46,-47,58,-45,58,58,58,-41,-42,-44,58,58,58,58,58,58,58,58,]),'/':([19,25,30,31,32,67,69,70,93,94,95,96,102,108,110,123,144,145,146,148,149,],[-66,59,-45,-46,-47,59,-45,59,59,59,-41,-42,-44,59,59,59,59,59,59,59,59,]),',':([19,22,23,24,25,26,27,30,31,32,33,62,67,69,72,78,91,93,94,95,96,97,98,100,101,102,103,104,105,106,107,110,111,128,129,],[-66,55,-20,-21,-27,-28,-22,-45,-46,-47,-52,-50,-43,-45,-55,112,126,-39,-40,-41,-42,-48,-57,-49,-60,-44,-51,-58,-56,-61,-59,130,-54,-53,-36,]),')':([19,25,26,30,31,32,33,62,67,69,70,71,72,81,83,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,111,128,133,],[-66,-27,-28,-45,-46,-47,-52,-50,-43,-45,102,103,-55,113,121,-39,-40,-41,-42,-48,-57,-49,-60,-44,-51,-58,-56,-61,-59,128,-54,-53,-74,]),'EQ':([19,25,26,30,31,32,33,62,67,69,72,82,93,94,95,96,97,98,100,101,102,103,104,105,106,107,111,128,],[-66,-27,-28,-45,-46,-47,-52,-50,-43,-45,-55,115,-39,-40,-41,-42,-48,-57,-49,-60,-44,-51,-58,-56,-61,-59,-54,-53,]),'NEQ':([19,25,26,30,31,32,33,62,67,69,72,82,93,94,95,96,97,98,100,101,102,103,104,105,106,107,111,128,],[-66,-27,-28,-45,-46,-47,-52,-50,-43,-45,-55,116,-39,-40,-41,-42,-48,-57,-49,-60,-44,-51,-58,-56,-61,-59,-54,-53,]),'LT':([19,25,26,30,31,32,33,62,67,69,72,82,93,94,95,96,97,98,100,101,102,103,104,105,106,107,111,128,],[-66,-27,-28,-45,-46,-47,-52,-50,-43,-45,-55,117,-39,-40,-41,-42,-48,-57,-49,-60,-44,-51,-58,-56,-61,-59,-54,-53,]),'GT':([19,25,26,30,31,32,33,62,67,69,72,82,93,94,95,96,97,98,100,101,102,103,104,105,106,107,111,128,],[-66,-27,-28,-45,-46,-47,-52,-50,-43,-45,-55,118,-39,-40,-41,-42,-48,-57,-49,-60,-44,-51,-58,-56,-61,-59,-54,-53,]),'<':([19,25,26,30,31,32,33,62,67,69,72,82,93,94,95,96,97,98,100,101,102,103,104,105,106,107,111,128,],[-66,-27,-28,-45,-46,-47,-52,-50,-43,-45,-55,119,-39,-40,-41,-42,-48,-57,-49,-60,-44,-51,-58,-56,-61,-59,-54,-53,]),'>':([19,25,26,30,31,32,33,62,67,69,72,82,93,94,95,96,97,98,100,101,102,103,104,105,106,107,111,128,],[-66,-27,-28,-45,-46,-47,-52,-50,-43,-45,-55,120,-39,-40,-41,-42,-48,-57,-49,-60,-44,-51,-58,-56,-61,-59,-54,-53,]),']':([19,31,32,67,69,77,78,89,90,91,93,94,95,96,102,109,110,129,131,141,142,],[-66,-46,-47,-43,-45,111,-71,124,125,-35,-39,-40,-41,-42,-44,129,-38,-36,-70,-34,-37,]),':':([19,31,32,67,69,93,94,95,96,102,123,],[-66,-46,-47,-43,-45,-39,-40,-41,-42,-44,136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,8,],[1,20,40,]),'program_ins':([0,2,8,113,121,122,143,],[2,2,2,132,134,135,150,]),'assign':([0,2,8,113,121,122,143,],[4,4,4,4,4,4,4,]),'cond_instruction':([0,2,8,113,121,122,143,],[5,5,5,5,5,5,5,]),'while_instruction':([0,2,8,113,121,122,143,],[6,6,6,6,6,6,6,]),'for_instruction':([0,2,8,113,121,122,143,],[7,7,7,7,7,7,7,]),'id_assign':([0,2,8,113,121,122,143,],[13,13,13,13,13,13,13,]),'matrix_assign':([0,2,8,113,121,122,143,],[14,14,14,14,14,14,14,]),'id':([0,2,3,8,11,17,28,29,44,45,47,48,55,56,57,58,59,60,61,68,73,74,75,76,84,87,99,113,114,121,122,130,136,137,138,139,140,143,],[18,18,30,18,30,46,69,30,30,30,30,30,30,69,69,69,69,98,101,69,104,106,69,69,69,69,127,18,30,18,18,69,69,69,69,69,69,18,]),'value':([3,55,],[21,92,]),'all_operations':([3,47,55,],[22,85,22,]),'operation':([3,11,44,45,47,48,55,114,],[23,43,82,82,23,88,23,133,]),'string':([3,47,55,],[24,24,24,]),'numeric_operation':([3,11,28,29,44,45,47,48,55,56,57,58,59,68,75,76,84,87,114,130,136,137,138,139,140,],[25,25,67,70,25,25,25,25,25,93,94,95,96,70,108,110,123,110,25,110,144,145,146,148,149,]),'matrix_operation':([3,11,29,44,45,47,48,55,60,61,73,74,99,114,],[26,26,71,26,26,26,26,26,97,100,105,107,71,26,]),'id_form':([3,11,29,44,45,47,48,55,60,61,73,74,99,114,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'fid':([3,11,29,44,45,47,48,55,60,61,73,74,99,114,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'assign_operator':([18,124,125,],[48,138,140,]),'matrix_operator_mul':([26,30,71,97,98,100,101,104,105,106,107,127,],[60,73,60,60,73,60,73,73,60,73,60,73,]),'matrix_operator_add':([26,30,71,97,98,100,101,104,105,106,107,127,],[61,74,61,61,74,61,74,74,61,74,61,74,]),'matrix':([35,87,112,],[77,77,131,]),'vector':([35,47,87,112,139,],[78,86,78,78,147,]),'condition':([44,45,],[81,83,]),'multiple_index':([49,],[89,]),'single_index':([49,],[90,]),'vector_val':([76,87,130,],[109,109,142,]),'comparison_operator':([82,],[114,]),'range':([84,],[122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_ins program','program',2,'p_program','Mparser.py',28),
  ('program -> program_ins','program',1,'p_program','Mparser.py',29),
  ('program_ins -> PRINT value ;','program_ins',3,'p_program_instrucitons','Mparser.py',34),
  ('program_ins -> assign ;','program_ins',2,'p_program_instrucitons','Mparser.py',35),
  ('program_ins -> cond_instruction','program_ins',1,'p_program_instrucitons','Mparser.py',36),
  ('program_ins -> while_instruction','program_ins',1,'p_program_instrucitons','Mparser.py',37),
  ('program_ins -> for_instruction','program_ins',1,'p_program_instrucitons','Mparser.py',38),
  ('program_ins -> { program }','program_ins',3,'p_program_instrucitons','Mparser.py',39),
  ('program_ins -> BREAK ;','program_ins',2,'p_program_instrucitons','Mparser.py',40),
  ('program_ins -> CONTINUE ;','program_ins',2,'p_program_instrucitons','Mparser.py',41),
  ('program_ins -> RETURN operation ;','program_ins',3,'p_program_instrucitons','Mparser.py',42),
  ('program_ins -> COMMENT','program_ins',1,'p_program_instrucitons','Mparser.py',43),
  ('value -> all_operations , value','value',3,'p_value','Mparser.py',51),
  ('value -> all_operations','value',1,'p_value','Mparser.py',52),
  ('assign -> id_assign','assign',1,'p_assign','Mparser.py',57),
  ('assign -> matrix_assign','assign',1,'p_assign','Mparser.py',58),
  ('id_assign -> id = all_operations','id_assign',3,'p_id_assign','Mparser.py',63),
  ('id_assign -> id = vector','id_assign',3,'p_id_assign','Mparser.py',64),
  ('id_assign -> id assign_operator operation','id_assign',3,'p_id_assign','Mparser.py',65),
  ('all_operations -> operation','all_operations',1,'p_all_operations','Mparser.py',69),
  ('all_operations -> string','all_operations',1,'p_all_operations','Mparser.py',70),
  ('string -> STRING','string',1,'p_string','Mparser.py',74),
  ('assign_operator -> ADDASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',78),
  ('assign_operator -> SUBASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',79),
  ('assign_operator -> MULASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',80),
  ('assign_operator -> DIVASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',81),
  ('operation -> numeric_operation','operation',1,'p_operation','Mparser.py',84),
  ('operation -> matrix_operation','operation',1,'p_operation','Mparser.py',85),
  ('matrix_assign -> id [ multiple_index ] = numeric_operation','matrix_assign',6,'p_matrix_assign','Mparser.py',89),
  ('matrix_assign -> id [ multiple_index ] assign_operator numeric_operation','matrix_assign',6,'p_matrix_assign','Mparser.py',90),
  ('matrix_assign -> id [ single_index ] = vector','matrix_assign',6,'p_matrix_assign','Mparser.py',91),
  ('matrix_assign -> id [ single_index ] = numeric_operation','matrix_assign',6,'p_matrix_assign','Mparser.py',92),
  ('matrix_assign -> id [ single_index ] assign_operator numeric_operation','matrix_assign',6,'p_matrix_assign','Mparser.py',93),
  ('multiple_index -> INTNUM , INTNUM','multiple_index',3,'p_multiple_index','Mparser.py',97),
  ('single_index -> INTNUM','single_index',1,'p_single_index','Mparser.py',101),
  ('vector -> [ vector_val ]','vector',3,'p_vector','Mparser.py',105),
  ('vector_val -> numeric_operation , vector_val','vector_val',3,'p_vector_val','Mparser.py',109),
  ('vector_val -> numeric_operation','vector_val',1,'p_vector_val','Mparser.py',110),
  ('numeric_operation -> numeric_operation + numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',115),
  ('numeric_operation -> numeric_operation - numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',116),
  ('numeric_operation -> numeric_operation * numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',117),
  ('numeric_operation -> numeric_operation / numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',118),
  ('numeric_operation -> - numeric_operation','numeric_operation',2,'p_numeric_operations','Mparser.py',119),
  ('numeric_operation -> ( numeric_operation )','numeric_operation',3,'p_numeric_operations','Mparser.py',120),
  ('numeric_operation -> id','numeric_operation',1,'p_numeric_operations','Mparser.py',121),
  ('numeric_operation -> INTNUM','numeric_operation',1,'p_numeric_operations','Mparser.py',122),
  ('numeric_operation -> FLOATNUM','numeric_operation',1,'p_numeric_operations','Mparser.py',123),
  ('matrix_operation -> matrix_operation matrix_operator_mul matrix_operation','matrix_operation',3,'p_matrix_operation','Mparser.py',132),
  ('matrix_operation -> matrix_operation matrix_operator_add matrix_operation','matrix_operation',3,'p_matrix_operation','Mparser.py',133),
  ("matrix_operation -> matrix_operation '",'matrix_operation',2,'p_matrix_operation','Mparser.py',134),
  ('matrix_operation -> ( matrix_operation )','matrix_operation',3,'p_matrix_operation','Mparser.py',135),
  ('matrix_operation -> id_form','matrix_operation',1,'p_matrix_operation','Mparser.py',136),
  ('matrix_operation -> fid ( numeric_operation )','matrix_operation',4,'p_matrix_operation','Mparser.py',137),
  ('matrix_operation -> [ matrix ]','matrix_operation',3,'p_matrix_operation','Mparser.py',138),
  ("id_form -> id '",'id_form',2,'p_id_form','Mparser.py',151),
  ('id_form -> id matrix_operator_mul matrix_operation','id_form',3,'p_id_form','Mparser.py',152),
  ('id_form -> matrix_operation matrix_operator_mul id','id_form',3,'p_id_form','Mparser.py',153),
  ('id_form -> id matrix_operator_mul id','id_form',3,'p_id_form','Mparser.py',154),
  ('id_form -> id matrix_operator_add matrix_operation','id_form',3,'p_id_form','Mparser.py',155),
  ('id_form -> matrix_operation matrix_operator_add id','id_form',3,'p_id_form','Mparser.py',156),
  ('id_form -> id matrix_operator_add id','id_form',3,'p_id_form','Mparser.py',157),
  ('matrix_operator_mul -> DOTMUL','matrix_operator_mul',1,'p_matrix_mul','Mparser.py',163),
  ('matrix_operator_mul -> DOTDIV','matrix_operator_mul',1,'p_matrix_mul','Mparser.py',164),
  ('matrix_operator_add -> DOTADD','matrix_operator_add',1,'p_matrix_add','Mparser.py',168),
  ('matrix_operator_add -> DOTSUB','matrix_operator_add',1,'p_matrix_add','Mparser.py',169),
  ('id -> ID','id',1,'p_id','Mparser.py',173),
  ('fid -> ZEROS','fid',1,'p_fid','Mparser.py',177),
  ('fid -> ONES','fid',1,'p_fid','Mparser.py',178),
  ('fid -> EYE','fid',1,'p_fid','Mparser.py',179),
  ('matrix -> vector , matrix','matrix',3,'p_matrix','Mparser.py',183),
  ('matrix -> vector','matrix',1,'p_matrix','Mparser.py',184),
  ('cond_instruction -> IF ( condition ) program_ins','cond_instruction',5,'p_cond_instruction','Mparser.py',190),
  ('cond_instruction -> IF ( condition ) program_ins ELSE program_ins','cond_instruction',7,'p_cond_instruction','Mparser.py',191),
  ('condition -> operation comparison_operator operation','condition',3,'p_condition','Mparser.py',196),
  ('comparison_operator -> EQ','comparison_operator',1,'p_comparison_operators','Mparser.py',200),
  ('comparison_operator -> NEQ','comparison_operator',1,'p_comparison_operators','Mparser.py',201),
  ('comparison_operator -> LT','comparison_operator',1,'p_comparison_operators','Mparser.py',202),
  ('comparison_operator -> GT','comparison_operator',1,'p_comparison_operators','Mparser.py',203),
  ('comparison_operator -> <','comparison_operator',1,'p_comparison_operators','Mparser.py',204),
  ('comparison_operator -> >','comparison_operator',1,'p_comparison_operators','Mparser.py',205),
  ('while_instruction -> WHILE ( condition ) program_ins','while_instruction',5,'p_while_instruction','Mparser.py',209),
  ('for_instruction -> FOR id = range program_ins','for_instruction',5,'p_for_instruction','Mparser.py',213),
  ('range -> numeric_operation : numeric_operation','range',3,'p_range','Mparser.py',217),
]
