
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEleft+-MATRIX_ADDleft*/MATRIX_MULnonassoc\'UMINUSADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GT ID IF INTNUM LT MULASSIGN NEQ ONES PRINT RETURN STRING SUBASSIGN UMINUS WHILE ZEROSprogram : program_ins program\n                | program_insprogram_ins : PRINT value \';\'\n                | assign \';\'\n                | cond_instruction\n                | while_instruction\n                | for_instruction\n                | \'{\' program \'}\'\n                | BREAK \';\'\n                | CONTINUE \';\'\n                | RETURN operation \';\'value : all_operations \',\' value\n            | all_operationsassign : id_assign\n                | matrix_assignid_assign : id \'=\' all_operations\n                | id \'=\' vector\n                | id assign_operator operationall_operations : operation\n                    | stringstring : STRINGassign_operator : ADDASSIGN\n                | SUBASSIGN\n                | MULASSIGN\n                | DIVASSIGNoperation : numeric_operation\n                | matrix_operationmatrix_assign : id \'[\' multiple_index \']\' \'=\' numeric_operation\n                    | id \'[\' multiple_index \']\' assign_operator numeric_operation\n                    | id \'[\' single_index \']\' \'=\' vector\n                    | id \'[\' single_index \']\' \'=\' numeric_operation\n                    | id \'[\' single_index \']\' assign_operator numeric_operationmultiple_index : INTNUM \',\' INTNUMsingle_index : INTNUMvector : \'[\' vector_val \']\'vector_val : numeric_operation \',\' vector_val\n                | numeric_operationnumeric_operation : numeric_operation \'+\' numeric_operation\n                            | numeric_operation \'-\' numeric_operation\n                            | numeric_operation \'*\' numeric_operation\n                            | numeric_operation \'/\' numeric_operation\n                            | \'-\' numeric_operation %prec UMINUS\n                            | \'(\' numeric_operation \')\'\n                            | id\n                            | INTNUM\n                            | FLOATNUMmatrix_operation : matrix_operation matrix_operator_mul matrix_operation %prec MATRIX_MUL\n                        | matrix_operation matrix_operator_add matrix_operation %prec MATRIX_ADD\n                        | matrix_operation "\'"\n                        | \'(\' matrix_operation \')\'\n                        | id_form\n                        | fid \'(\' numeric_operation \')\'\n                        | \'[\' matrix \']\'id_form : id "\'"\n                | id matrix_operator_mul matrix_operation %prec MATRIX_MUL\n                | matrix_operation matrix_operator_mul id %prec MATRIX_MUL\n                | id matrix_operator_mul id %prec MATRIX_MUL\n                | id matrix_operator_add matrix_operation %prec MATRIX_ADD\n                | matrix_operation matrix_operator_add id %prec MATRIX_ADD\n                | id matrix_operator_add id %prec MATRIX_ADDmatrix_operator_mul : DOTMUL\n        | DOTDIVmatrix_operator_add : DOTADD\n        | DOTSUBid : IDfid : ZEROS\n            | ONES\n            | EYEmatrix : vector \',\' matrix\n                | vectorcond_instruction : IF \'(\' condition \')\' program_ins %prec IFX\n                        | IF \'(\' condition \')\' program_ins ELSE program_inscondition : operation comparison_operator operationcomparison_operator : EQ\n                            | NEQ\n                            | LT\n                            | GT\n                            | \'<\'\n                            | \'>\'while_instruction : WHILE \'(\' condition \')\' program_insfor_instruction : FOR id \'=\' range program_insrange : numeric_operation \':\' numeric_operation'
    
_lr_action_items = {'PRINT':([0,2,5,6,7,8,18,30,31,38,40,41,53,66,68,78,79,92,93,94,95,101,112,120,121,131,133,134,142,143,149,],[3,3,-5,-6,-7,3,-65,-45,-46,-4,-9,-10,-3,-42,-44,-8,-11,-38,-39,-40,-41,-43,3,3,3,-71,-80,-81,3,-82,-72,]),'{':([0,2,5,6,7,8,18,30,31,38,40,41,53,66,68,78,79,92,93,94,95,101,112,120,121,131,133,134,142,143,149,],[8,8,-5,-6,-7,8,-65,-45,-46,-4,-9,-10,-3,-42,-44,-8,-11,-38,-39,-40,-41,-43,8,8,8,-71,-80,-81,8,-82,-72,]),'BREAK':([0,2,5,6,7,8,18,30,31,38,40,41,53,66,68,78,79,92,93,94,95,101,112,120,121,131,133,134,142,143,149,],[9,9,-5,-6,-7,9,-65,-45,-46,-4,-9,-10,-3,-42,-44,-8,-11,-38,-39,-40,-41,-43,9,9,9,-71,-80,-81,9,-82,-72,]),'CONTINUE':([0,2,5,6,7,8,18,30,31,38,40,41,53,66,68,78,79,92,93,94,95,101,112,120,121,131,133,134,142,143,149,],[10,10,-5,-6,-7,10,-65,-45,-46,-4,-9,-10,-3,-42,-44,-8,-11,-38,-39,-40,-41,-43,10,10,10,-71,-80,-81,10,-82,-72,]),'RETURN':([0,2,5,6,7,8,18,30,31,38,40,41,53,66,68,78,79,92,93,94,95,101,112,120,121,131,133,134,142,143,149,],[11,11,-5,-6,-7,11,-65,-45,-46,-4,-9,-10,-3,-42,-44,-8,-11,-38,-39,-40,-41,-43,11,11,11,-71,-80,-81,11,-82,-72,]),'IF':([0,2,5,6,7,8,18,30,31,38,40,41,53,66,68,78,79,92,93,94,95,101,112,120,121,131,133,134,142,143,149,],[14,14,-5,-6,-7,14,-65,-45,-46,-4,-9,-10,-3,-42,-44,-8,-11,-38,-39,-40,-41,-43,14,14,14,-71,-80,-81,14,-82,-72,]),'WHILE':([0,2,5,6,7,8,18,30,31,38,40,41,53,66,68,78,79,92,93,94,95,101,112,120,121,131,133,134,142,143,149,],[15,15,-5,-6,-7,15,-65,-45,-46,-4,-9,-10,-3,-42,-44,-8,-11,-38,-39,-40,-41,-43,15,15,15,-71,-80,-81,15,-82,-72,]),'FOR':([0,2,5,6,7,8,18,30,31,38,40,41,53,66,68,78,79,92,93,94,95,101,112,120,121,131,133,134,142,143,149,],[16,16,-5,-6,-7,16,-65,-45,-46,-4,-9,-10,-3,-42,-44,-8,-11,-38,-39,-40,-41,-43,16,16,16,-71,-80,-81,16,-82,-72,]),'ID':([0,2,3,5,6,7,8,11,16,18,27,28,30,31,38,40,41,43,44,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,72,73,74,75,78,79,83,86,92,93,94,95,98,101,112,113,114,115,116,117,118,119,120,121,129,131,133,134,135,136,137,138,139,142,143,149,],[18,18,18,-5,-6,-7,18,18,18,-65,18,18,-45,-46,-4,-9,-10,18,18,18,18,-22,-23,-24,-25,-3,18,18,18,18,18,18,18,-61,-62,-63,-64,-42,18,-44,18,18,18,18,-8,-11,18,18,-38,-39,-40,-41,18,-43,18,18,-74,-75,-76,-77,-78,-79,18,18,18,-71,-80,-81,18,18,18,18,18,18,-82,-72,]),'$end':([1,2,5,6,7,19,38,40,41,53,78,79,131,133,134,149,],[0,-2,-5,-6,-7,-1,-4,-9,-10,-3,-8,-11,-71,-80,-81,-72,]),'}':([2,5,6,7,19,38,39,40,41,53,78,79,131,133,134,149,],[-2,-5,-6,-7,-1,-4,78,-9,-10,-3,-8,-11,-71,-80,-81,-72,]),'STRING':([3,46,54,],[26,26,26,]),'-':([3,11,18,24,27,28,29,30,31,43,44,46,47,49,50,51,52,54,55,56,57,58,66,67,68,69,74,75,83,86,92,93,94,95,101,107,109,113,114,115,116,117,118,119,122,129,135,136,137,138,139,143,144,145,147,148,],[27,27,-65,56,27,27,-44,-45,-46,27,27,27,27,-22,-23,-24,-25,27,27,27,27,27,-42,27,-44,56,27,27,27,27,-38,-39,-40,-41,-43,56,56,27,-74,-75,-76,-77,-78,-79,56,27,27,27,27,27,27,56,56,56,56,56,]),'(':([3,11,14,15,27,28,33,35,36,37,43,44,46,47,49,50,51,52,54,55,56,57,58,59,60,62,63,64,65,67,72,73,74,75,83,86,98,113,114,115,116,117,118,119,129,135,136,137,138,139,],[28,28,43,44,67,28,74,-66,-67,-68,28,28,28,28,-22,-23,-24,-25,28,67,67,67,67,98,98,-61,-62,-63,-64,67,98,98,67,67,67,67,98,28,-74,-75,-76,-77,-78,-79,67,67,67,67,67,67,]),'INTNUM':([3,11,27,28,43,44,46,47,48,49,50,51,52,54,55,56,57,58,67,74,75,83,86,113,114,115,116,117,118,119,125,129,135,136,137,138,139,],[30,30,30,30,30,30,30,30,90,-22,-23,-24,-25,30,30,30,30,30,30,30,30,30,30,30,-74,-75,-76,-77,-78,-79,140,30,30,30,30,30,30,]),'FLOATNUM':([3,11,27,28,43,44,46,47,49,50,51,52,54,55,56,57,58,67,74,75,83,86,113,114,115,116,117,118,119,129,135,136,137,138,139,],[31,31,31,31,31,31,31,31,-22,-23,-24,-25,31,31,31,31,31,31,31,31,31,31,31,-74,-75,-76,-77,-78,-79,31,31,31,31,31,31,]),'[':([3,11,17,18,28,34,43,44,46,47,49,50,51,52,54,59,60,62,63,64,65,72,73,86,98,111,113,114,115,116,117,118,119,138,],[34,34,48,-65,34,75,34,34,86,34,-22,-23,-24,-25,34,34,34,-61,-62,-63,-64,34,34,75,34,75,34,-74,-75,-76,-77,-78,-79,75,]),'ZEROS':([3,11,28,43,44,46,47,49,50,51,52,54,59,60,62,63,64,65,72,73,98,113,114,115,116,117,118,119,],[35,35,35,35,35,35,35,-22,-23,-24,-25,35,35,35,-61,-62,-63,-64,35,35,35,35,-74,-75,-76,-77,-78,-79,]),'ONES':([3,11,28,43,44,46,47,49,50,51,52,54,59,60,62,63,64,65,72,73,98,113,114,115,116,117,118,119,],[36,36,36,36,36,36,36,-22,-23,-24,-25,36,36,36,-61,-62,-63,-64,36,36,36,36,-74,-75,-76,-77,-78,-79,]),'EYE':([3,11,28,43,44,46,47,49,50,51,52,54,59,60,62,63,64,65,72,73,98,113,114,115,116,117,118,119,],[37,37,37,37,37,37,37,-22,-23,-24,-25,37,37,37,-61,-62,-63,-64,37,37,37,37,-74,-75,-76,-77,-78,-79,]),';':([4,9,10,12,13,18,20,21,22,23,24,25,26,29,30,31,32,42,61,66,68,71,84,85,87,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,110,127,128,144,145,146,147,148,],[38,40,41,-14,-15,-65,53,-13,-19,-20,-26,-27,-21,-44,-45,-46,-51,79,-49,-42,-44,-54,-16,-17,-18,-12,-38,-39,-40,-41,-47,-56,-48,-59,-43,-50,-57,-55,-60,-58,-53,-52,-35,-28,-29,-30,-31,-32,]),'ELSE':([5,6,7,38,40,41,53,78,79,131,133,134,149,],[-5,-6,-7,-4,-9,-10,-3,-8,-11,142,-80,-81,-72,]),'=':([17,18,45,123,124,],[46,-65,83,136,138,]),'ADDASSIGN':([17,18,123,124,],[49,-65,49,49,]),'SUBASSIGN':([17,18,123,124,],[50,-65,50,50,]),'MULASSIGN':([17,18,123,124,],[51,-65,51,51,]),'DIVASSIGN':([17,18,123,124,],[52,-65,52,52,]),"'":([18,25,29,32,61,70,71,96,97,99,100,102,103,104,105,106,110,126,127,],[-65,61,71,-51,-49,61,-54,61,71,61,71,-50,71,61,71,61,-53,71,-52,]),'DOTMUL':([18,25,29,32,61,70,71,96,97,99,100,102,103,104,105,106,110,126,127,],[-65,62,62,-51,-49,62,-54,-47,-56,-48,-59,-50,-57,-55,-60,-58,-53,62,-52,]),'DOTDIV':([18,25,29,32,61,70,71,96,97,99,100,102,103,104,105,106,110,126,127,],[-65,63,63,-51,-49,63,-54,-47,-56,-48,-59,-50,-57,-55,-60,-58,-53,63,-52,]),'DOTADD':([18,25,29,32,61,70,71,96,97,99,100,102,103,104,105,106,110,126,127,],[-65,64,64,-51,-49,64,-54,-47,-56,-48,-59,-50,-57,-55,-60,-58,-53,64,-52,]),'DOTSUB':([18,25,29,32,61,70,71,96,97,99,100,102,103,104,105,106,110,126,127,],[-65,65,65,-51,-49,65,-54,-47,-56,-48,-59,-50,-57,-55,-60,-58,-53,65,-52,]),'+':([18,24,29,30,31,66,68,69,92,93,94,95,101,107,109,122,143,144,145,147,148,],[-65,55,-44,-45,-46,-42,-44,55,-38,-39,-40,-41,-43,55,55,55,55,55,55,55,55,]),'*':([18,24,29,30,31,66,68,69,92,93,94,95,101,107,109,122,143,144,145,147,148,],[-65,57,-44,-45,-46,-42,-44,57,57,57,-40,-41,-43,57,57,57,57,57,57,57,57,]),'/':([18,24,29,30,31,66,68,69,92,93,94,95,101,107,109,122,143,144,145,147,148,],[-65,58,-44,-45,-46,-42,-44,58,58,58,-40,-41,-43,58,58,58,58,58,58,58,58,]),',':([18,21,22,23,24,25,26,29,30,31,32,61,66,68,71,77,90,92,93,94,95,96,97,99,100,101,102,103,104,105,106,109,110,127,128,],[-65,54,-19,-20,-26,-27,-21,-44,-45,-46,-51,-49,-42,-44,-54,111,125,-38,-39,-40,-41,-47,-56,-48,-59,-43,-50,-57,-55,-60,-58,129,-53,-52,-35,]),')':([18,24,25,29,30,31,32,61,66,68,69,70,71,80,82,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,110,127,132,],[-65,-26,-27,-44,-45,-46,-51,-49,-42,-44,101,102,-54,112,120,-38,-39,-40,-41,-47,-56,-48,-59,-43,-50,-57,-55,-60,-58,127,-53,-52,-73,]),'EQ':([18,24,25,29,30,31,32,61,66,68,71,81,92,93,94,95,96,97,99,100,101,102,103,104,105,106,110,127,],[-65,-26,-27,-44,-45,-46,-51,-49,-42,-44,-54,114,-38,-39,-40,-41,-47,-56,-48,-59,-43,-50,-57,-55,-60,-58,-53,-52,]),'NEQ':([18,24,25,29,30,31,32,61,66,68,71,81,92,93,94,95,96,97,99,100,101,102,103,104,105,106,110,127,],[-65,-26,-27,-44,-45,-46,-51,-49,-42,-44,-54,115,-38,-39,-40,-41,-47,-56,-48,-59,-43,-50,-57,-55,-60,-58,-53,-52,]),'LT':([18,24,25,29,30,31,32,61,66,68,71,81,92,93,94,95,96,97,99,100,101,102,103,104,105,106,110,127,],[-65,-26,-27,-44,-45,-46,-51,-49,-42,-44,-54,116,-38,-39,-40,-41,-47,-56,-48,-59,-43,-50,-57,-55,-60,-58,-53,-52,]),'GT':([18,24,25,29,30,31,32,61,66,68,71,81,92,93,94,95,96,97,99,100,101,102,103,104,105,106,110,127,],[-65,-26,-27,-44,-45,-46,-51,-49,-42,-44,-54,117,-38,-39,-40,-41,-47,-56,-48,-59,-43,-50,-57,-55,-60,-58,-53,-52,]),'<':([18,24,25,29,30,31,32,61,66,68,71,81,92,93,94,95,96,97,99,100,101,102,103,104,105,106,110,127,],[-65,-26,-27,-44,-45,-46,-51,-49,-42,-44,-54,118,-38,-39,-40,-41,-47,-56,-48,-59,-43,-50,-57,-55,-60,-58,-53,-52,]),'>':([18,24,25,29,30,31,32,61,66,68,71,81,92,93,94,95,96,97,99,100,101,102,103,104,105,106,110,127,],[-65,-26,-27,-44,-45,-46,-51,-49,-42,-44,-54,119,-38,-39,-40,-41,-47,-56,-48,-59,-43,-50,-57,-55,-60,-58,-53,-52,]),']':([18,30,31,66,68,76,77,88,89,90,92,93,94,95,101,108,109,128,130,140,141,],[-65,-45,-46,-42,-44,110,-70,123,124,-34,-38,-39,-40,-41,-43,128,-37,-35,-69,-33,-36,]),':':([18,30,31,66,68,92,93,94,95,101,122,],[-65,-45,-46,-42,-44,-38,-39,-40,-41,-43,135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,8,],[1,19,39,]),'program_ins':([0,2,8,112,120,121,142,],[2,2,2,131,133,134,149,]),'assign':([0,2,8,112,120,121,142,],[4,4,4,4,4,4,4,]),'cond_instruction':([0,2,8,112,120,121,142,],[5,5,5,5,5,5,5,]),'while_instruction':([0,2,8,112,120,121,142,],[6,6,6,6,6,6,6,]),'for_instruction':([0,2,8,112,120,121,142,],[7,7,7,7,7,7,7,]),'id_assign':([0,2,8,112,120,121,142,],[12,12,12,12,12,12,12,]),'matrix_assign':([0,2,8,112,120,121,142,],[13,13,13,13,13,13,13,]),'id':([0,2,3,8,11,16,27,28,43,44,46,47,54,55,56,57,58,59,60,67,72,73,74,75,83,86,98,112,113,120,121,129,135,136,137,138,139,142,],[17,17,29,17,29,45,68,29,29,29,29,29,29,68,68,68,68,97,100,68,103,105,68,68,68,68,126,17,29,17,17,68,68,68,68,68,68,17,]),'value':([3,54,],[20,91,]),'all_operations':([3,46,54,],[21,84,21,]),'operation':([3,11,43,44,46,47,54,113,],[22,42,81,81,22,87,22,132,]),'string':([3,46,54,],[23,23,23,]),'numeric_operation':([3,11,27,28,43,44,46,47,54,55,56,57,58,67,74,75,83,86,113,129,135,136,137,138,139,],[24,24,66,69,24,24,24,24,24,92,93,94,95,69,107,109,122,109,24,109,143,144,145,147,148,]),'matrix_operation':([3,11,28,43,44,46,47,54,59,60,72,73,98,113,],[25,25,70,25,25,25,25,25,96,99,104,106,70,25,]),'id_form':([3,11,28,43,44,46,47,54,59,60,72,73,98,113,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'fid':([3,11,28,43,44,46,47,54,59,60,72,73,98,113,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'assign_operator':([17,123,124,],[47,137,139,]),'matrix_operator_mul':([25,29,70,96,97,99,100,103,104,105,106,126,],[59,72,59,59,72,59,72,72,59,72,59,72,]),'matrix_operator_add':([25,29,70,96,97,99,100,103,104,105,106,126,],[60,73,60,60,73,60,73,73,60,73,60,73,]),'matrix':([34,86,111,],[76,76,130,]),'vector':([34,46,86,111,138,],[77,85,77,77,146,]),'condition':([43,44,],[80,82,]),'multiple_index':([48,],[88,]),'single_index':([48,],[89,]),'vector_val':([75,86,129,],[108,108,141,]),'comparison_operator':([81,],[113,]),'range':([83,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_ins program','program',2,'p_program','Mparser.py',26),
  ('program -> program_ins','program',1,'p_program','Mparser.py',27),
  ('program_ins -> PRINT value ;','program_ins',3,'p_program_instrucitons','Mparser.py',32),
  ('program_ins -> assign ;','program_ins',2,'p_program_instrucitons','Mparser.py',33),
  ('program_ins -> cond_instruction','program_ins',1,'p_program_instrucitons','Mparser.py',34),
  ('program_ins -> while_instruction','program_ins',1,'p_program_instrucitons','Mparser.py',35),
  ('program_ins -> for_instruction','program_ins',1,'p_program_instrucitons','Mparser.py',36),
  ('program_ins -> { program }','program_ins',3,'p_program_instrucitons','Mparser.py',37),
  ('program_ins -> BREAK ;','program_ins',2,'p_program_instrucitons','Mparser.py',38),
  ('program_ins -> CONTINUE ;','program_ins',2,'p_program_instrucitons','Mparser.py',39),
  ('program_ins -> RETURN operation ;','program_ins',3,'p_program_instrucitons','Mparser.py',40),
  ('value -> all_operations , value','value',3,'p_value','Mparser.py',48),
  ('value -> all_operations','value',1,'p_value','Mparser.py',49),
  ('assign -> id_assign','assign',1,'p_assign','Mparser.py',54),
  ('assign -> matrix_assign','assign',1,'p_assign','Mparser.py',55),
  ('id_assign -> id = all_operations','id_assign',3,'p_id_assign','Mparser.py',60),
  ('id_assign -> id = vector','id_assign',3,'p_id_assign','Mparser.py',61),
  ('id_assign -> id assign_operator operation','id_assign',3,'p_id_assign','Mparser.py',62),
  ('all_operations -> operation','all_operations',1,'p_all_operations','Mparser.py',66),
  ('all_operations -> string','all_operations',1,'p_all_operations','Mparser.py',67),
  ('string -> STRING','string',1,'p_string','Mparser.py',71),
  ('assign_operator -> ADDASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',75),
  ('assign_operator -> SUBASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',76),
  ('assign_operator -> MULASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',77),
  ('assign_operator -> DIVASSIGN','assign_operator',1,'p_assign_operator','Mparser.py',78),
  ('operation -> numeric_operation','operation',1,'p_operation','Mparser.py',81),
  ('operation -> matrix_operation','operation',1,'p_operation','Mparser.py',82),
  ('matrix_assign -> id [ multiple_index ] = numeric_operation','matrix_assign',6,'p_matrix_assign','Mparser.py',86),
  ('matrix_assign -> id [ multiple_index ] assign_operator numeric_operation','matrix_assign',6,'p_matrix_assign','Mparser.py',87),
  ('matrix_assign -> id [ single_index ] = vector','matrix_assign',6,'p_matrix_assign','Mparser.py',88),
  ('matrix_assign -> id [ single_index ] = numeric_operation','matrix_assign',6,'p_matrix_assign','Mparser.py',89),
  ('matrix_assign -> id [ single_index ] assign_operator numeric_operation','matrix_assign',6,'p_matrix_assign','Mparser.py',90),
  ('multiple_index -> INTNUM , INTNUM','multiple_index',3,'p_multiple_index','Mparser.py',94),
  ('single_index -> INTNUM','single_index',1,'p_single_index','Mparser.py',98),
  ('vector -> [ vector_val ]','vector',3,'p_vector','Mparser.py',102),
  ('vector_val -> numeric_operation , vector_val','vector_val',3,'p_vector_val','Mparser.py',106),
  ('vector_val -> numeric_operation','vector_val',1,'p_vector_val','Mparser.py',107),
  ('numeric_operation -> numeric_operation + numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',112),
  ('numeric_operation -> numeric_operation - numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',113),
  ('numeric_operation -> numeric_operation * numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',114),
  ('numeric_operation -> numeric_operation / numeric_operation','numeric_operation',3,'p_numeric_operations','Mparser.py',115),
  ('numeric_operation -> - numeric_operation','numeric_operation',2,'p_numeric_operations','Mparser.py',116),
  ('numeric_operation -> ( numeric_operation )','numeric_operation',3,'p_numeric_operations','Mparser.py',117),
  ('numeric_operation -> id','numeric_operation',1,'p_numeric_operations','Mparser.py',118),
  ('numeric_operation -> INTNUM','numeric_operation',1,'p_numeric_operations','Mparser.py',119),
  ('numeric_operation -> FLOATNUM','numeric_operation',1,'p_numeric_operations','Mparser.py',120),
  ('matrix_operation -> matrix_operation matrix_operator_mul matrix_operation','matrix_operation',3,'p_matrix_operation','Mparser.py',129),
  ('matrix_operation -> matrix_operation matrix_operator_add matrix_operation','matrix_operation',3,'p_matrix_operation','Mparser.py',130),
  ("matrix_operation -> matrix_operation '",'matrix_operation',2,'p_matrix_operation','Mparser.py',131),
  ('matrix_operation -> ( matrix_operation )','matrix_operation',3,'p_matrix_operation','Mparser.py',132),
  ('matrix_operation -> id_form','matrix_operation',1,'p_matrix_operation','Mparser.py',133),
  ('matrix_operation -> fid ( numeric_operation )','matrix_operation',4,'p_matrix_operation','Mparser.py',134),
  ('matrix_operation -> [ matrix ]','matrix_operation',3,'p_matrix_operation','Mparser.py',135),
  ("id_form -> id '",'id_form',2,'p_id_form','Mparser.py',148),
  ('id_form -> id matrix_operator_mul matrix_operation','id_form',3,'p_id_form','Mparser.py',149),
  ('id_form -> matrix_operation matrix_operator_mul id','id_form',3,'p_id_form','Mparser.py',150),
  ('id_form -> id matrix_operator_mul id','id_form',3,'p_id_form','Mparser.py',151),
  ('id_form -> id matrix_operator_add matrix_operation','id_form',3,'p_id_form','Mparser.py',152),
  ('id_form -> matrix_operation matrix_operator_add id','id_form',3,'p_id_form','Mparser.py',153),
  ('id_form -> id matrix_operator_add id','id_form',3,'p_id_form','Mparser.py',154),
  ('matrix_operator_mul -> DOTMUL','matrix_operator_mul',1,'p_matrix_mul','Mparser.py',160),
  ('matrix_operator_mul -> DOTDIV','matrix_operator_mul',1,'p_matrix_mul','Mparser.py',161),
  ('matrix_operator_add -> DOTADD','matrix_operator_add',1,'p_matrix_add','Mparser.py',165),
  ('matrix_operator_add -> DOTSUB','matrix_operator_add',1,'p_matrix_add','Mparser.py',166),
  ('id -> ID','id',1,'p_id','Mparser.py',170),
  ('fid -> ZEROS','fid',1,'p_fid','Mparser.py',174),
  ('fid -> ONES','fid',1,'p_fid','Mparser.py',175),
  ('fid -> EYE','fid',1,'p_fid','Mparser.py',176),
  ('matrix -> vector , matrix','matrix',3,'p_matrix','Mparser.py',180),
  ('matrix -> vector','matrix',1,'p_matrix','Mparser.py',181),
  ('cond_instruction -> IF ( condition ) program_ins','cond_instruction',5,'p_cond_instruction','Mparser.py',187),
  ('cond_instruction -> IF ( condition ) program_ins ELSE program_ins','cond_instruction',7,'p_cond_instruction','Mparser.py',188),
  ('condition -> operation comparison_operator operation','condition',3,'p_condition','Mparser.py',193),
  ('comparison_operator -> EQ','comparison_operator',1,'p_comparison_operators','Mparser.py',197),
  ('comparison_operator -> NEQ','comparison_operator',1,'p_comparison_operators','Mparser.py',198),
  ('comparison_operator -> LT','comparison_operator',1,'p_comparison_operators','Mparser.py',199),
  ('comparison_operator -> GT','comparison_operator',1,'p_comparison_operators','Mparser.py',200),
  ('comparison_operator -> <','comparison_operator',1,'p_comparison_operators','Mparser.py',201),
  ('comparison_operator -> >','comparison_operator',1,'p_comparison_operators','Mparser.py',202),
  ('while_instruction -> WHILE ( condition ) program_ins','while_instruction',5,'p_while_instruction','Mparser.py',206),
  ('for_instruction -> FOR id = range program_ins','for_instruction',5,'p_for_instruction','Mparser.py',210),
  ('range -> numeric_operation : numeric_operation','range',3,'p_range','Mparser.py',214),
]
